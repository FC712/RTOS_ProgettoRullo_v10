Component: ARM Compiler 6.16 Tool: armlink [5dfeaa00]

==============================================================================

Section Cross References

    main.o(.text.main) refers to sysclock.o(.text.pllInit) for pllInit
    main.o(.text.main) refers to puls.o(.text.SwInit) for SwInit
    main.o(.text.main) refers to led.o(.text.LedInit) for LedInit
    main.o(.text.main) refers to mot.o(.text.motInit) for motInit
    main.o(.text.main) refers to ultrasuoni.o(.text.ultrsInit) for ultrsInit
    main.o(.text.main) refers to infrarossi.o(.text.irInit) for irInit
    main.o(.text.main) refers to buzzer.o(.text.BuzzerInit) for BuzzerInit
    main.o(.text.main) refers to event_groups.o(.text.xEventGroupCreate) for xEventGroupCreate
    main.o(.text.main) refers to main.o(.bss.xEventGroupRullo) for xEventGroupRullo
    main.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    puls.o(.text.SwInit) refers to puls.o(.text.SwCenterInit) for SwCenterInit
    puls.o(.text.SwInit) refers to puls.o(.text.SwLeftInit) for SwLeftInit
    puls.o(.text.SwInit) refers to puls.o(.text.SwRightInit) for SwRightInit
    puls.o(.text.SwInit) refers to puls.o(.text.SwUpInit) for SwUpInit
    puls.o(.text.SwInit) refers to puls.o(.text.SwDownInit) for SwDownInit
    puls.o(.ARM.exidx.text.SwInit) refers to puls.o(.text.SwInit) for [Anonymous Symbol]
    puls.o(.ARM.exidx.text.SwCenterInit) refers to puls.o(.text.SwCenterInit) for [Anonymous Symbol]
    puls.o(.ARM.exidx.text.SwLeftInit) refers to puls.o(.text.SwLeftInit) for [Anonymous Symbol]
    puls.o(.ARM.exidx.text.SwRightInit) refers to puls.o(.text.SwRightInit) for [Anonymous Symbol]
    puls.o(.ARM.exidx.text.SwUpInit) refers to puls.o(.text.SwUpInit) for [Anonymous Symbol]
    puls.o(.ARM.exidx.text.SwDownInit) refers to puls.o(.text.SwDownInit) for [Anonymous Symbol]
    puls.o(.text.SwCenterPress) refers to arduino.o(.text.digitalRead) for digitalRead
    puls.o(.ARM.exidx.text.SwCenterPress) refers to puls.o(.text.SwCenterPress) for [Anonymous Symbol]
    puls.o(.text.SwLeftPress) refers to arduino.o(.text.digitalRead) for digitalRead
    puls.o(.ARM.exidx.text.SwLeftPress) refers to puls.o(.text.SwLeftPress) for [Anonymous Symbol]
    puls.o(.text.SwRightPress) refers to arduino.o(.text.digitalRead) for digitalRead
    puls.o(.ARM.exidx.text.SwRightPress) refers to puls.o(.text.SwRightPress) for [Anonymous Symbol]
    puls.o(.text.SwUpPress) refers to arduino.o(.text.digitalRead) for digitalRead
    puls.o(.ARM.exidx.text.SwUpPress) refers to puls.o(.text.SwUpPress) for [Anonymous Symbol]
    puls.o(.text.SwDownPress) refers to arduino.o(.text.digitalRead) for digitalRead
    puls.o(.ARM.exidx.text.SwDownPress) refers to puls.o(.text.SwDownPress) for [Anonymous Symbol]
    puls.o(.text.SwTest) refers to puls.o(.text.SwUpPress) for SwUpPress
    puls.o(.text.SwTest) refers to led.o(.text.LedRossoOn) for LedRossoOn
    puls.o(.text.SwTest) refers to puls.o(.text.SwDownPress) for SwDownPress
    puls.o(.text.SwTest) refers to led.o(.text.LedRossoOff) for LedRossoOff
    puls.o(.text.SwTest) refers to puls.o(.text.SwLeftPress) for SwLeftPress
    puls.o(.text.SwTest) refers to led.o(.text.LedVerdeOn) for LedVerdeOn
    puls.o(.text.SwTest) refers to puls.o(.text.SwRightPress) for SwRightPress
    puls.o(.text.SwTest) refers to led.o(.text.LedVerdeOff) for LedVerdeOff
    puls.o(.text.SwTest) refers to puls.o(.text.SwCenterPress) for SwCenterPress
    puls.o(.text.SwTest) refers to led.o(.text.LedRossoToggle) for LedRossoToggle
    puls.o(.text.SwTest) refers to led.o(.text.LedVerdeToggle) for LedVerdeToggle
    puls.o(.ARM.exidx.text.SwTest) refers to puls.o(.text.SwTest) for [Anonymous Symbol]
    puls.o(.text.SwLeftClick) refers to arduino.o(.text.digitalRead) for digitalRead
    puls.o(.ARM.exidx.text.SwLeftClick) refers to puls.o(.text.SwLeftClick) for [Anonymous Symbol]
    puls.o(.text.SwRightClick) refers to arduino.o(.text.digitalRead) for digitalRead
    puls.o(.ARM.exidx.text.SwRightClick) refers to puls.o(.text.SwRightClick) for [Anonymous Symbol]
    puls.o(.text.SwRightClickOld) refers to arduino.o(.text.digitalRead) for digitalRead
    puls.o(.text.SwRightClickOld) refers to puls.o(.bss.SwRightClickOld.valSwOld) for SwRightClickOld.valSwOld
    puls.o(.ARM.exidx.text.SwRightClickOld) refers to puls.o(.text.SwRightClickOld) for [Anonymous Symbol]
    puls.o(.text.SwLeftClickOld) refers to arduino.o(.text.digitalRead) for digitalRead
    puls.o(.text.SwLeftClickOld) refers to puls.o(.bss.SwLeftClickOld.valSwOld) for SwLeftClickOld.valSwOld
    puls.o(.ARM.exidx.text.SwLeftClickOld) refers to puls.o(.text.SwLeftClickOld) for [Anonymous Symbol]
    puls.o(.text.SwRight2Click) refers to puls.o(.text.SwRightClick) for SwRightClick
    puls.o(.ARM.exidx.text.SwRight2Click) refers to puls.o(.text.SwRight2Click) for [Anonymous Symbol]
    puls.o(.text.SwDownLPress) refers to puls.o(.text.SwDownPress) for SwDownPress
    puls.o(.text.SwDownLPress) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    puls.o(.ARM.exidx.text.SwDownLPress) refers to puls.o(.text.SwDownLPress) for [Anonymous Symbol]
    puls.o(.text.SwLeftClickTask) refers to arduino.o(.text.digitalRead) for digitalRead
    puls.o(.text.SwLeftClickTask) refers to puls.o(.bss.click) for click
    puls.o(.ARM.exidx.text.SwLeftClickTask) refers to puls.o(.text.SwLeftClickTask) for [Anonymous Symbol]
    puls.o(.text.LedVerdeSwTask) refers to puls.o(.bss.click) for click
    puls.o(.text.LedVerdeSwTask) refers to puls.o(.data.LedVerdeSwTask.startTime) for LedVerdeSwTask.startTime
    puls.o(.text.LedVerdeSwTask) refers to led.o(.text.LedVerdeToggle) for LedVerdeToggle
    puls.o(.text.LedVerdeSwTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    puls.o(.ARM.exidx.text.LedVerdeSwTask) refers to puls.o(.text.LedVerdeSwTask) for [Anonymous Symbol]
    puls.o(.text.TestPressSw) refers to puls.o(.text.SwUpPress) for SwUpPress
    puls.o(.text.TestPressSw) refers to led.o(.text.LedRossoOn) for LedRossoOn
    puls.o(.text.TestPressSw) refers to puls.o(.text.SwDownLPress) for SwDownLPress
    puls.o(.text.TestPressSw) refers to led.o(.text.LedRossoOff) for LedRossoOff
    puls.o(.text.TestPressSw) refers to puls.o(.text.SwLeftClick) for SwLeftClick
    puls.o(.text.TestPressSw) refers to led.o(.text.LedVerdeOn) for LedVerdeOn
    puls.o(.text.TestPressSw) refers to puls.o(.text.SwRight2Click) for SwRight2Click
    puls.o(.text.TestPressSw) refers to led.o(.text.LedVerdeOff) for LedVerdeOff
    puls.o(.ARM.exidx.text.TestPressSw) refers to puls.o(.text.TestPressSw) for [Anonymous Symbol]
    puls.o(.ARM.exidx.text.TimeSwPress) refers to puls.o(.text.TimeSwPress) for [Anonymous Symbol]
    timer.o(.text.TIM1_CH1N_PWM) refers to system_stm32l4xx.o(.data.SystemCoreClock) for SystemCoreClock
    timer.o(.ARM.exidx.text.TIM1_CH1N_PWM) refers to timer.o(.text.TIM1_CH1N_PWM) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TIM1_CH2_PWM) refers to timer.o(.text.TIM1_CH2_PWM) for [Anonymous Symbol]
    timer.o(.text.TIM1_CH3_PWM) refers to system_stm32l4xx.o(.data.SystemCoreClock) for SystemCoreClock
    timer.o(.ARM.exidx.text.TIM1_CH3_PWM) refers to timer.o(.text.TIM1_CH3_PWM) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TIM1_CH4_PWM) refers to timer.o(.text.TIM1_CH4_PWM) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TIM1_SetCCR1) refers to timer.o(.text.TIM1_SetCCR1) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TIM2_CH2_PWM) refers to timer.o(.text.TIM2_CH2_PWM) for [Anonymous Symbol]
    timer.o(.text.TIM4_CH2_PWM) refers to system_stm32l4xx.o(.data.SystemCoreClock) for SystemCoreClock
    timer.o(.ARM.exidx.text.TIM4_CH2_PWM) refers to timer.o(.text.TIM4_CH2_PWM) for [Anonymous Symbol]
    timer.o(.text.TIM4_CH1_InCapt) refers to system_stm32l4xx.o(.data.SystemCoreClock) for SystemCoreClock
    timer.o(.text.TIM4_CH1_InCapt) refers to timer.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    timer.o(.text.TIM4_CH1_InCapt) refers to timer.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    timer.o(.ARM.exidx.text.TIM4_CH1_InCapt) refers to timer.o(.text.TIM4_CH1_InCapt) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.__NVIC_SetPriority) refers to timer.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to timer.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    timer.o(.text.TIM4_CH1_InCapt_SM) refers to system_stm32l4xx.o(.data.SystemCoreClock) for SystemCoreClock
    timer.o(.text.TIM4_CH1_InCapt_SM) refers to timer.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    timer.o(.text.TIM4_CH1_InCapt_SM) refers to timer.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    timer.o(.ARM.exidx.text.TIM4_CH1_InCapt_SM) refers to timer.o(.text.TIM4_CH1_InCapt_SM) for [Anonymous Symbol]
    led.o(.text.LedInit) refers to led.o(.text.LedRossoInit) for LedRossoInit
    led.o(.text.LedInit) refers to led.o(.text.LedVerdeInit) for LedVerdeInit
    led.o(.ARM.exidx.text.LedInit) refers to led.o(.text.LedInit) for [Anonymous Symbol]
    led.o(.ARM.exidx.text.LedRossoInit) refers to led.o(.text.LedRossoInit) for [Anonymous Symbol]
    led.o(.ARM.exidx.text.LedVerdeInit) refers to led.o(.text.LedVerdeInit) for [Anonymous Symbol]
    led.o(.ARM.exidx.text.LedRossoOn) refers to led.o(.text.LedRossoOn) for [Anonymous Symbol]
    led.o(.ARM.exidx.text.LedRossoOff) refers to led.o(.text.LedRossoOff) for [Anonymous Symbol]
    led.o(.ARM.exidx.text.LedRossoToggle) refers to led.o(.text.LedRossoToggle) for [Anonymous Symbol]
    led.o(.ARM.exidx.text.LedVerdeOn) refers to led.o(.text.LedVerdeOn) for [Anonymous Symbol]
    led.o(.ARM.exidx.text.LedVerdeOff) refers to led.o(.text.LedVerdeOff) for [Anonymous Symbol]
    led.o(.ARM.exidx.text.LedVerdeToggle) refers to led.o(.text.LedVerdeToggle) for [Anonymous Symbol]
    led.o(.text.LedRossoBlink) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    led.o(.text.LedRossoBlink) refers to led.o(.text.LedRossoToggle) for LedRossoToggle
    led.o(.ARM.exidx.text.LedRossoBlink) refers to led.o(.text.LedRossoBlink) for [Anonymous Symbol]
    led.o(.text.LedVerdeBlink) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    led.o(.text.LedVerdeBlink) refers to led.o(.text.LedVerdeToggle) for LedVerdeToggle
    led.o(.ARM.exidx.text.LedVerdeBlink) refers to led.o(.text.LedVerdeBlink) for [Anonymous Symbol]
    led.o(.text.LedTest) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    led.o(.text.LedTest) refers to led.o(.text.LedRossoToggle) for LedRossoToggle
    led.o(.text.LedTest) refers to led.o(.text.LedVerdeToggle) for LedVerdeToggle
    led.o(.ARM.exidx.text.LedTest) refers to led.o(.text.LedTest) for [Anonymous Symbol]
    led.o(.text.LedBlink) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    led.o(.text.LedBlink) refers to led.o(.text.LedRossoToggle) for LedRossoToggle
    led.o(.ARM.exidx.text.LedBlink) refers to led.o(.text.LedBlink) for [Anonymous Symbol]
    led.o(.text.LedRossoTask) refers to led.o(.text.LedRossoOn) for LedRossoOn
    led.o(.text.LedRossoTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    led.o(.text.LedRossoTask) refers to led.o(.text.LedRossoOff) for LedRossoOff
    led.o(.ARM.exidx.text.LedRossoTask) refers to led.o(.text.LedRossoTask) for [Anonymous Symbol]
    led.o(.text.LedVerdeTask) refers to led.o(.text.LedVerdeOn) for LedVerdeOn
    led.o(.text.LedVerdeTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    led.o(.text.LedVerdeTask) refers to led.o(.text.LedVerdeOff) for LedVerdeOff
    led.o(.ARM.exidx.text.LedVerdeTask) refers to led.o(.text.LedVerdeTask) for [Anonymous Symbol]
    led.o(.text.LedVerdeBlinkTask) refers to led.o(.text.LedVerdeToggle) for LedVerdeToggle
    led.o(.text.LedVerdeBlinkTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    led.o(.ARM.exidx.text.LedVerdeBlinkTask) refers to led.o(.text.LedVerdeBlinkTask) for [Anonymous Symbol]
    led.o(.text.LedRossoBlinkTask) refers to led.o(.text.LedRossoToggle) for LedRossoToggle
    led.o(.text.LedRossoBlinkTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    led.o(.ARM.exidx.text.LedRossoBlinkTask) refers to led.o(.text.LedRossoBlinkTask) for [Anonymous Symbol]
    mot.o(.text.motInit) refers to mot.o(.text.TIM1_CH2_Init) for TIM1_CH2_Init
    mot.o(.text.motInit) refers to mot.o(.text.vTask_Motore) for vTask_Motore
    mot.o(.text.motInit) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    mot.o(.text.motInit) refers to mot.o(.text.vTaskMotPA0) for vTaskMotPA0
    mot.o(.text.motInit) refers to mot.o(.text.vTaskMotPA2) for vTaskMotPA2
    mot.o(.text.motInit) refers to mot.o(.text.motStop) for motStop
    mot.o(.ARM.exidx.text.motInit) refers to mot.o(.text.motInit) for [Anonymous Symbol]
    mot.o(.ARM.exidx.text.TIM1_CH2_Init) refers to mot.o(.text.TIM1_CH2_Init) for [Anonymous Symbol]
    mot.o(.text.vTask_Motore) refers to main.o(.bss.xEventGroupRullo) for xEventGroupRullo
    mot.o(.text.vTask_Motore) refers to mot.o(.text.motStop) for motStop
    mot.o(.text.vTask_Motore) refers to event_groups.o(.text.xEventGroupWaitBits) for xEventGroupWaitBits
    mot.o(.text.vTask_Motore) refers to mot.o(.text.motStart) for motStart
    mot.o(.ARM.exidx.text.vTask_Motore) refers to mot.o(.text.vTask_Motore) for [Anonymous Symbol]
    mot.o(.text.vTaskMotPA0) refers to main.o(.bss.xEventGroupRullo) for xEventGroupRullo
    mot.o(.text.vTaskMotPA0) refers to arduino.o(.text.digitalRead) for digitalRead
    mot.o(.text.vTaskMotPA0) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    mot.o(.ARM.exidx.text.vTaskMotPA0) refers to mot.o(.text.vTaskMotPA0) for [Anonymous Symbol]
    mot.o(.text.vTaskMotPA2) refers to main.o(.bss.xEventGroupRullo) for xEventGroupRullo
    mot.o(.text.vTaskMotPA2) refers to arduino.o(.text.digitalRead) for digitalRead
    mot.o(.text.vTaskMotPA2) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    mot.o(.ARM.exidx.text.vTaskMotPA2) refers to mot.o(.text.vTaskMotPA2) for [Anonymous Symbol]
    mot.o(.ARM.exidx.text.motStop) refers to mot.o(.text.motStop) for [Anonymous Symbol]
    mot.o(.ARM.exidx.text.motStart) refers to mot.o(.text.motStart) for [Anonymous Symbol]
    sysclock.o(.text.MSIInit) refers to system_stm32l4xx.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    sysclock.o(.ARM.exidx.text.MSIInit) refers to sysclock.o(.text.MSIInit) for [Anonymous Symbol]
    sysclock.o(.text.pllInit) refers to system_stm32l4xx.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    sysclock.o(.ARM.exidx.text.pllInit) refers to sysclock.o(.text.pllInit) for [Anonymous Symbol]
    arduino.o(.ARM.exidx.text.pinMode) refers to arduino.o(.text.pinMode) for [Anonymous Symbol]
    arduino.o(.ARM.exidx.text.pinModeEx) refers to arduino.o(.text.pinModeEx) for [Anonymous Symbol]
    arduino.o(.ARM.exidx.text.digitalWrite) refers to arduino.o(.text.digitalWrite) for [Anonymous Symbol]
    arduino.o(.ARM.exidx.text.digitalRead) refers to arduino.o(.text.digitalRead) for [Anonymous Symbol]
    arduino.o(.ARM.exidx.text.pulseIn) refers to arduino.o(.text.pulseIn) for [Anonymous Symbol]
    ultrasuoni.o(.ARM.exidx.text.trgInit) refers to ultrasuoni.o(.text.trgInit) for [Anonymous Symbol]
    ultrasuoni.o(.ARM.exidx.text.echoInit) refers to ultrasuoni.o(.text.echoInit) for [Anonymous Symbol]
    ultrasuoni.o(.text.ultrsInit) refers to ultrasuoni.o(.text.trgInit) for trgInit
    ultrasuoni.o(.text.ultrsInit) refers to ultrasuoni.o(.text.echoInit) for echoInit
    ultrasuoni.o(.text.ultrsInit) refers to ultrasuoni.o(.text.vTask_SensUltrasuoni) for vTask_SensUltrasuoni
    ultrasuoni.o(.text.ultrsInit) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    ultrasuoni.o(.ARM.exidx.text.ultrsInit) refers to ultrasuoni.o(.text.ultrsInit) for [Anonymous Symbol]
    ultrasuoni.o(.text.vTask_SensUltrasuoni) refers to ultrasuoni.o(.text.TIM4_CH1_Init) for TIM4_CH1_Init
    ultrasuoni.o(.text.vTask_SensUltrasuoni) refers to ultrasuoni.o(.text.TIM2_CH1_InCapt_SM) for TIM2_CH1_InCapt_SM
    ultrasuoni.o(.ARM.exidx.text.vTask_SensUltrasuoni) refers to ultrasuoni.o(.text.vTask_SensUltrasuoni) for [Anonymous Symbol]
    ultrasuoni.o(.ARM.exidx.text.TIM4_CH1_Init) refers to ultrasuoni.o(.text.TIM4_CH1_Init) for [Anonymous Symbol]
    ultrasuoni.o(.text.TIM2_CH1_InCapt_SM) refers to ultrasuoni.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    ultrasuoni.o(.text.TIM2_CH1_InCapt_SM) refers to ultrasuoni.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    ultrasuoni.o(.ARM.exidx.text.TIM2_CH1_InCapt_SM) refers to ultrasuoni.o(.text.TIM2_CH1_InCapt_SM) for [Anonymous Symbol]
    ultrasuoni.o(.ARM.exidx.text.__NVIC_SetPriority) refers to ultrasuoni.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    ultrasuoni.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to ultrasuoni.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    ultrasuoni.o(.text.TIM2_IRQHandler) refers to main.o(.bss.xEventGroupRullo) for xEventGroupRullo
    ultrasuoni.o(.text.TIM2_IRQHandler) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    ultrasuoni.o(.ARM.exidx.text.TIM2_IRQHandler) refers to ultrasuoni.o(.text.TIM2_IRQHandler) for [Anonymous Symbol]
    infrarossi.o(.text.irInit) refers to arduino.o(.text.pinMode) for pinMode
    infrarossi.o(.text.irInit) refers to infrarossi.o(.text.vTaskRilevaColore) for vTaskRilevaColore
    infrarossi.o(.text.irInit) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    infrarossi.o(.ARM.exidx.text.irInit) refers to infrarossi.o(.text.irInit) for [Anonymous Symbol]
    infrarossi.o(.text.vTaskRilevaColore) refers to main.o(.bss.xEventGroupRullo) for xEventGroupRullo
    infrarossi.o(.text.vTaskRilevaColore) refers to led.o(.text.LedVerdeOn) for LedVerdeOn
    infrarossi.o(.text.vTaskRilevaColore) refers to led.o(.text.LedRossoOff) for LedRossoOff
    infrarossi.o(.text.vTaskRilevaColore) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    infrarossi.o(.text.vTaskRilevaColore) refers to event_groups.o(.text.xEventGroupWaitBits) for xEventGroupWaitBits
    infrarossi.o(.text.vTaskRilevaColore) refers to infrarossi.o(.text.irRead) for irRead
    infrarossi.o(.text.vTaskRilevaColore) refers to led.o(.text.LedRossoOn) for LedRossoOn
    infrarossi.o(.text.vTaskRilevaColore) refers to led.o(.text.LedVerdeOff) for LedVerdeOff
    infrarossi.o(.ARM.exidx.text.vTaskRilevaColore) refers to infrarossi.o(.text.vTaskRilevaColore) for [Anonymous Symbol]
    infrarossi.o(.text.irRead) refers to arduino.o(.text.digitalRead) for digitalRead
    infrarossi.o(.ARM.exidx.text.irRead) refers to infrarossi.o(.text.irRead) for [Anonymous Symbol]
    servo.o(.ARM.exidx.text.srvInit) refers to servo.o(.text.srvInit) for [Anonymous Symbol]
    servo.o(.ARM.exidx.text.TIM5_CH2PWM_Init) refers to servo.o(.text.TIM5_CH2PWM_Init) for [Anonymous Symbol]
    servo.o(.text.vTask_Servo) refers to servo.o(.text.TIM5_CH2PWM_Init) for TIM5_CH2PWM_Init
    servo.o(.ARM.exidx.text.vTask_Servo) refers to servo.o(.text.vTask_Servo) for [Anonymous Symbol]
    servo.o(.text.smistaBiancoSx) refers to servo.o(.bss.srvTon) for srvTon
    servo.o(.text.smistaBiancoSx) refers to servo.o(.text.setPosSrv) for setPosSrv
    servo.o(.text.smistaBiancoSx) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    servo.o(.ARM.exidx.text.smistaBiancoSx) refers to servo.o(.text.smistaBiancoSx) for [Anonymous Symbol]
    servo.o(.ARM.exidx.text.setPosSrv) refers to servo.o(.text.setPosSrv) for [Anonymous Symbol]
    servo.o(.text.smistaNeroDx) refers to servo.o(.bss.srvTon) for srvTon
    servo.o(.text.smistaNeroDx) refers to servo.o(.text.setPosSrv) for setPosSrv
    servo.o(.text.smistaNeroDx) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    servo.o(.ARM.exidx.text.smistaNeroDx) refers to servo.o(.text.smistaNeroDx) for [Anonymous Symbol]
    buzzer.o(.text.BuzzerInit) refers to arduino.o(.text.pinMode) for pinMode
    buzzer.o(.text.BuzzerInit) refers to buzzer.o(.text.vTaskBuzzerTest) for vTaskBuzzerTest
    buzzer.o(.text.BuzzerInit) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    buzzer.o(.ARM.exidx.text.BuzzerInit) refers to buzzer.o(.text.BuzzerInit) for [Anonymous Symbol]
    buzzer.o(.text.vTaskBuzzerTest) refers to main.o(.bss.xEventGroupRullo) for xEventGroupRullo
    buzzer.o(.text.vTaskBuzzerTest) refers to event_groups.o(.text.xEventGroupWaitBits) for xEventGroupWaitBits
    buzzer.o(.text.vTaskBuzzerTest) refers to arduino.o(.text.digitalWrite) for digitalWrite
    buzzer.o(.text.vTaskBuzzerTest) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    buzzer.o(.ARM.exidx.text.vTaskBuzzerTest) refers to buzzer.o(.text.vTaskBuzzerTest) for [Anonymous Symbol]
    clib_arm.o(.ARM.exidx.text._platform_post_stackheap_init) refers to clib_arm.o(.text._platform_post_stackheap_init) for [Anonymous Symbol]
    clib_arm.o(.text.__user_perthread_libspace) refers to clib_arm.o(.text.os_kernel_is_active) for os_kernel_is_active
    clib_arm.o(.text.__user_perthread_libspace) refers to clib_arm.o(.bss.os_libspace) for os_libspace
    clib_arm.o(.text.__user_perthread_libspace) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    clib_arm.o(.text.__user_perthread_libspace) refers to clib_arm.o(.bss.os_libspace_id) for os_libspace_id
    clib_arm.o(.ARM.exidx.text.__user_perthread_libspace) refers to clib_arm.o(.text.__user_perthread_libspace) for [Anonymous Symbol]
    clib_arm.o(.text.os_kernel_is_active) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    clib_arm.o(.ARM.exidx.text.os_kernel_is_active) refers to clib_arm.o(.text.os_kernel_is_active) for [Anonymous Symbol]
    clib_arm.o(.text._mutex_initialize) refers to clib_arm.o(.bss.clib_mutex_cb) for clib_mutex_cb
    clib_arm.o(.text._mutex_initialize) refers to clib_arm.o(.bss.clib_mutex_id) for clib_mutex_id
    clib_arm.o(.text._mutex_initialize) refers to clib_arm.o(.text.os_kernel_is_active) for os_kernel_is_active
    clib_arm.o(.text._mutex_initialize) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    clib_arm.o(.text._mutex_initialize) refers to queue.o(.text.xQueueCreateMutexStatic) for xQueueCreateMutexStatic
    clib_arm.o(.ARM.exidx.text._mutex_initialize) refers to clib_arm.o(.text._mutex_initialize) for [Anonymous Symbol]
    clib_arm.o(.text._mutex_acquire) refers to clib_arm.o(.text.os_kernel_is_active) for os_kernel_is_active
    clib_arm.o(.text._mutex_acquire) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    clib_arm.o(.ARM.exidx.text._mutex_acquire) refers to clib_arm.o(.text._mutex_acquire) for [Anonymous Symbol]
    clib_arm.o(.text._mutex_release) refers to clib_arm.o(.text.os_kernel_is_active) for os_kernel_is_active
    clib_arm.o(.text._mutex_release) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    clib_arm.o(.ARM.exidx.text._mutex_release) refers to clib_arm.o(.text._mutex_release) for [Anonymous Symbol]
    clib_arm.o(.text._mutex_free) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    clib_arm.o(.text._mutex_free) refers to clib_arm.o(.bss.clib_mutex_id) for clib_mutex_id
    clib_arm.o(.ARM.exidx.text._mutex_free) refers to clib_arm.o(.text._mutex_free) for [Anonymous Symbol]
    cmsis_os2.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.SysTick_Handler) refers to port.o(.text.xPortSysTickHandler) for xPortSysTickHandler
    cmsis_os2.o(.ARM.exidx.text.SysTick_Handler) refers to cmsis_os2.o(.text.SysTick_Handler) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelInitialize) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelInitialize) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelInitialize) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.ARM.exidx.text.osKernelInitialize) refers to cmsis_os2.o(.text.osKernelInitialize) for [Anonymous Symbol]
    cmsis_os2.o(.text.IRQ_Context) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.ARM.exidx.text.IRQ_Context) refers to cmsis_os2.o(.text.IRQ_Context) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetInfo) refers to cmsis_os2.o(.rodata.str1.4) for .L.str
    cmsis_os2.o(.text.osKernelGetInfo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    cmsis_os2.o(.ARM.exidx.text.osKernelGetInfo) refers to cmsis_os2.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetState) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelGetState) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.ARM.exidx.text.osKernelGetState) refers to cmsis_os2.o(.text.osKernelGetState) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelStart) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelStart) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelStart) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osKernelStart) refers to cmsis_os2.o(.text.SVC_Setup) for SVC_Setup
    cmsis_os2.o(.text.osKernelStart) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    cmsis_os2.o(.ARM.exidx.text.osKernelStart) refers to cmsis_os2.o(.text.osKernelStart) for [Anonymous Symbol]
    cmsis_os2.o(.text.SVC_Setup) refers to cmsis_os2.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    cmsis_os2.o(.ARM.exidx.text.SVC_Setup) refers to cmsis_os2.o(.text.SVC_Setup) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelLock) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelLock) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelLock) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    cmsis_os2.o(.ARM.exidx.text.osKernelLock) refers to cmsis_os2.o(.text.osKernelLock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelUnlock) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelUnlock) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelUnlock) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    cmsis_os2.o(.ARM.exidx.text.osKernelUnlock) refers to cmsis_os2.o(.text.osKernelUnlock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelRestoreLock) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelRestoreLock) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelRestoreLock) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    cmsis_os2.o(.text.osKernelRestoreLock) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    cmsis_os2.o(.ARM.exidx.text.osKernelRestoreLock) refers to cmsis_os2.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetTickCount) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelGetTickCount) refers to tasks.o(.text.xTaskGetTickCountFromISR) for xTaskGetTickCountFromISR
    cmsis_os2.o(.text.osKernelGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.ARM.exidx.text.osKernelGetTickCount) refers to cmsis_os2.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osKernelGetTickFreq) refers to cmsis_os2.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to cmsis_os2.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetSysTimerFreq) refers to system_stm32l4xx.o(.data.SystemCoreClock) for SystemCoreClock
    cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to cmsis_os2.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadNew) refers to tasks.o(.text.xTaskCreateStatic) for xTaskCreateStatic
    cmsis_os2.o(.text.osThreadNew) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    cmsis_os2.o(.ARM.exidx.text.osThreadNew) refers to cmsis_os2.o(.text.osThreadNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetName) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadGetName) refers to tasks.o(.text.pcTaskGetName) for pcTaskGetName
    cmsis_os2.o(.ARM.exidx.text.osThreadGetName) refers to cmsis_os2.o(.text.osThreadGetName) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetId) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.ARM.exidx.text.osThreadGetId) refers to cmsis_os2.o(.text.osThreadGetId) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetState) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadGetState) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    cmsis_os2.o(.ARM.exidx.text.osThreadGetState) refers to cmsis_os2.o(.text.osThreadGetState) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetStackSpace) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadGetStackSpace) refers to tasks.o(.text.uxTaskGetStackHighWaterMark) for uxTaskGetStackHighWaterMark
    cmsis_os2.o(.ARM.exidx.text.osThreadGetStackSpace) refers to cmsis_os2.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadSetPriority) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadSetPriority) refers to tasks.o(.text.vTaskPrioritySet) for vTaskPrioritySet
    cmsis_os2.o(.ARM.exidx.text.osThreadSetPriority) refers to cmsis_os2.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetPriority) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadGetPriority) refers to tasks.o(.text.uxTaskPriorityGet) for uxTaskPriorityGet
    cmsis_os2.o(.ARM.exidx.text.osThreadGetPriority) refers to cmsis_os2.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadYield) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.ARM.exidx.text.osThreadYield) refers to cmsis_os2.o(.text.osThreadYield) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadSuspend) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadSuspend) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    cmsis_os2.o(.ARM.exidx.text.osThreadSuspend) refers to cmsis_os2.o(.text.osThreadSuspend) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadResume) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadResume) refers to tasks.o(.text.vTaskResume) for vTaskResume
    cmsis_os2.o(.ARM.exidx.text.osThreadResume) refers to cmsis_os2.o(.text.osThreadResume) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadExit) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    cmsis_os2.o(.ARM.exidx.text.osThreadExit) refers to cmsis_os2.o(.text.osThreadExit) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadTerminate) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadTerminate) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    cmsis_os2.o(.text.osThreadTerminate) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    cmsis_os2.o(.ARM.exidx.text.osThreadTerminate) refers to cmsis_os2.o(.text.osThreadTerminate) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetCount) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadGetCount) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    cmsis_os2.o(.ARM.exidx.text.osThreadGetCount) refers to cmsis_os2.o(.text.osThreadGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadEnumerate) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    cmsis_os2.o(.text.osThreadEnumerate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.uxTaskGetSystemState) for uxTaskGetSystemState
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    cmsis_os2.o(.text.osThreadEnumerate) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osThreadEnumerate) refers to cmsis_os2.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsSet) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadFlagsSet) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    cmsis_os2.o(.text.osThreadFlagsSet) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsSet) refers to cmsis_os2.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsClear) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadFlagsClear) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.text.osThreadFlagsClear) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsClear) refers to cmsis_os2.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsGet) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadFlagsGet) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.text.osThreadFlagsGet) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsGet) refers to cmsis_os2.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsWait) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadFlagsWait) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.text.osThreadFlagsWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsWait) refers to cmsis_os2.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    cmsis_os2.o(.text.osDelay) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osDelay) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    cmsis_os2.o(.ARM.exidx.text.osDelay) refers to cmsis_os2.o(.text.osDelay) for [Anonymous Symbol]
    cmsis_os2.o(.text.osDelayUntil) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osDelayUntil) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.text.osDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for xTaskDelayUntil
    cmsis_os2.o(.ARM.exidx.text.osDelayUntil) refers to cmsis_os2.o(.text.osDelayUntil) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerNew) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os2.o(.text.osTimerNew) refers to cmsis_os2.o(.text.TimerCallback) for TimerCallback
    cmsis_os2.o(.text.osTimerNew) refers to timers.o(.text.xTimerCreateStatic) for xTimerCreateStatic
    cmsis_os2.o(.text.osTimerNew) refers to timers.o(.text.xTimerCreate) for xTimerCreate
    cmsis_os2.o(.text.osTimerNew) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osTimerNew) refers to cmsis_os2.o(.text.osTimerNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.TimerCallback) refers to timers.o(.text.pvTimerGetTimerID) for pvTimerGetTimerID
    cmsis_os2.o(.ARM.exidx.text.TimerCallback) refers to cmsis_os2.o(.text.TimerCallback) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerGetName) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerGetName) refers to timers.o(.text.pcTimerGetName) for pcTimerGetName
    cmsis_os2.o(.ARM.exidx.text.osTimerGetName) refers to cmsis_os2.o(.text.osTimerGetName) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerStart) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerStart) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    cmsis_os2.o(.ARM.exidx.text.osTimerStart) refers to cmsis_os2.o(.text.osTimerStart) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerStop) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerStop) refers to timers.o(.text.xTimerIsTimerActive) for xTimerIsTimerActive
    cmsis_os2.o(.text.osTimerStop) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    cmsis_os2.o(.ARM.exidx.text.osTimerStop) refers to cmsis_os2.o(.text.osTimerStop) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerIsRunning) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerIsRunning) refers to timers.o(.text.xTimerIsTimerActive) for xTimerIsTimerActive
    cmsis_os2.o(.ARM.exidx.text.osTimerIsRunning) refers to cmsis_os2.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerDelete) refers to timers.o(.text.pvTimerGetTimerID) for pvTimerGetTimerID
    cmsis_os2.o(.text.osTimerDelete) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    cmsis_os2.o(.text.osTimerDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osTimerDelete) refers to cmsis_os2.o(.text.osTimerDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsNew) refers to event_groups.o(.text.xEventGroupCreateStatic) for xEventGroupCreateStatic
    cmsis_os2.o(.text.osEventFlagsNew) refers to event_groups.o(.text.xEventGroupCreate) for xEventGroupCreate
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsNew) refers to cmsis_os2.o(.text.osEventFlagsNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsSet) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsSet) refers to event_groups.o(.text.xEventGroupSetBitsFromISR) for xEventGroupSetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsSet) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsSet) refers to cmsis_os2.o(.text.osEventFlagsSet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsClear) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsClear) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for xEventGroupGetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsClear) refers to event_groups.o(.text.xEventGroupClearBitsFromISR) for xEventGroupClearBitsFromISR
    cmsis_os2.o(.text.osEventFlagsClear) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsClear) refers to cmsis_os2.o(.text.osEventFlagsClear) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsGet) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsGet) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for xEventGroupGetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsGet) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsGet) refers to cmsis_os2.o(.text.osEventFlagsGet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsWait) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsWait) refers to event_groups.o(.text.xEventGroupWaitBits) for xEventGroupWaitBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsWait) refers to cmsis_os2.o(.text.osEventFlagsWait) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsDelete) refers to event_groups.o(.text.vEventGroupDelete) for vEventGroupDelete
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsDelete) refers to cmsis_os2.o(.text.osEventFlagsDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMutexNew) refers to queue.o(.text.xQueueCreateMutexStatic) for xQueueCreateMutexStatic
    cmsis_os2.o(.text.osMutexNew) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    cmsis_os2.o(.ARM.exidx.text.osMutexNew) refers to cmsis_os2.o(.text.osMutexNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexAcquire) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMutexAcquire) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os2.o(.text.osMutexAcquire) refers to queue.o(.text.xQueueTakeMutexRecursive) for xQueueTakeMutexRecursive
    cmsis_os2.o(.ARM.exidx.text.osMutexAcquire) refers to cmsis_os2.o(.text.osMutexAcquire) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexRelease) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMutexRelease) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.text.osMutexRelease) refers to queue.o(.text.xQueueGiveMutexRecursive) for xQueueGiveMutexRecursive
    cmsis_os2.o(.ARM.exidx.text.osMutexRelease) refers to cmsis_os2.o(.text.osMutexRelease) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexGetOwner) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMutexGetOwner) refers to queue.o(.text.xQueueGetMutexHolder) for xQueueGetMutexHolder
    cmsis_os2.o(.ARM.exidx.text.osMutexGetOwner) refers to cmsis_os2.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMutexDelete) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.ARM.exidx.text.osMutexDelete) refers to cmsis_os2.o(.text.osMutexDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueCreateCountingSemaphoreStatic) for xQueueCreateCountingSemaphoreStatic
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueCreateCountingSemaphore) for xQueueCreateCountingSemaphore
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreNew) refers to cmsis_os2.o(.text.osSemaphoreNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreAcquire) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osSemaphoreAcquire) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os2.o(.text.osSemaphoreAcquire) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreAcquire) refers to cmsis_os2.o(.text.osSemaphoreAcquire) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreRelease) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osSemaphoreRelease) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    cmsis_os2.o(.text.osSemaphoreRelease) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreRelease) refers to cmsis_os2.o(.text.osSemaphoreRelease) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreGetCount) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osSemaphoreGetCount) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osSemaphoreGetCount) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreGetCount) refers to cmsis_os2.o(.text.osSemaphoreGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osSemaphoreDelete) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreDelete) refers to cmsis_os2.o(.text.osSemaphoreDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueNew) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    cmsis_os2.o(.text.osMessageQueueNew) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueNew) refers to cmsis_os2.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueuePut) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueuePut) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    cmsis_os2.o(.text.osMessageQueuePut) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osMessageQueuePut) refers to cmsis_os2.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGet) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueGet) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os2.o(.text.osMessageQueueGet) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGet) refers to cmsis_os2.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to cmsis_os2.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to cmsis_os2.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGetCount) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueGetCount) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMessageQueueGetCount) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCount) refers to cmsis_os2.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGetSpace) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueGetSpace) refers to queue.o(.text.uxQueueSpacesAvailable) for uxQueueSpacesAvailable
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to cmsis_os2.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueReset) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueReset) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueReset) refers to cmsis_os2.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueDelete) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueDelete) refers to cmsis_os2.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolNew) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os2.o(.text.osMemoryPoolNew) refers to queue.o(.text.xQueueCreateCountingSemaphoreStatic) for xQueueCreateCountingSemaphoreStatic
    cmsis_os2.o(.text.osMemoryPoolNew) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolNew) refers to cmsis_os2.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolGetName) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetName) refers to cmsis_os2.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.AllocBlock) for AllocBlock
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.CreateBlock) for CreateBlock
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.AllocBlock) refers to cmsis_os2.o(.text.AllocBlock) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.CreateBlock) refers to cmsis_os2.o(.text.CreateBlock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolFree) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.text.osMemoryPoolFree) refers to cmsis_os2.o(.text.FreeBlock) for FreeBlock
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    cmsis_os2.o(.text.osMemoryPoolFree) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os2.o(.text.osMemoryPoolFree) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolFree) refers to cmsis_os2.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.FreeBlock) refers to cmsis_os2.o(.text.FreeBlock) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to cmsis_os2.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to cmsis_os2.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolGetCount) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolGetCount) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMemoryPoolGetCount) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to cmsis_os2.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolGetSpace) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolGetSpace) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMemoryPoolGetSpace) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to cmsis_os2.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolDelete) refers to cmsis_os2.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.vApplicationStackOverflowHook) refers to cmsis_os2.o(.text.vApplicationStackOverflowHook) for [Anonymous Symbol]
    cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_TCB) for vApplicationGetIdleTaskMemory.Idle_TCB
    cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_Stack) for vApplicationGetIdleTaskMemory.Idle_Stack
    cmsis_os2.o(.ARM.exidx.text.vApplicationGetIdleTaskMemory) refers to cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) for [Anonymous Symbol]
    cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_TCB) for vApplicationGetTimerTaskMemory.Timer_TCB
    cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_Stack) for vApplicationGetTimerTaskMemory.Timer_Stack
    cmsis_os2.o(.ARM.exidx.text.vApplicationGetTimerTaskMemory) refers to cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.__NVIC_SetPriority) refers to cmsis_os2.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to system_stm32l4xx.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.PendST) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.__NVIC_SetPriority) refers to os_systick.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.PendST) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.PendST) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_stm32l4xx.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    startup_stm32l476xx.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32l476xx.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32l476xx.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32l476xx.o(RESET) refers to startup_stm32l476xx.o(STACK) for __initial_sp
    startup_stm32l476xx.o(RESET) refers to startup_stm32l476xx.o(.text) for Reset_Handler
    startup_stm32l476xx.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_stm32l476xx.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_stm32l476xx.o(RESET) refers to cmsis_os2.o(.text.SysTick_Handler) for SysTick_Handler
    startup_stm32l476xx.o(RESET) refers to ultrasuoni.o(.text.TIM2_IRQHandler) for TIM2_IRQHandler
    startup_stm32l476xx.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32l476xx.o(.text) refers to system_stm32l4xx.o(.text.SystemInit) for SystemInit
    startup_stm32l476xx.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32l476xx.o(.text) refers to startup_stm32l476xx.o(HEAP) for Heap_Mem
    startup_stm32l476xx.o(.text) refers to startup_stm32l476xx.o(STACK) for Stack_Mem
    system_stm32l4xx.o(.ARM.exidx.text.SystemInit) refers to system_stm32l4xx.o(.text.SystemInit) for [Anonymous Symbol]
    system_stm32l4xx.o(.text.SystemCoreClockUpdate) refers to system_stm32l4xx.o(.rodata.MSIRangeTable) for MSIRangeTable
    system_stm32l4xx.o(.text.SystemCoreClockUpdate) refers to system_stm32l4xx.o(.data.SystemCoreClock) for SystemCoreClock
    system_stm32l4xx.o(.text.SystemCoreClockUpdate) refers to system_stm32l4xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_stm32l4xx.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_stm32l4xx.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupCreateStatic) refers to list.o(.text.vListInitialise) for vListInitialise
    event_groups.o(.ARM.exidx.text.xEventGroupCreateStatic) refers to event_groups.o(.text.xEventGroupCreateStatic) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    event_groups.o(.text.xEventGroupCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    event_groups.o(.ARM.exidx.text.xEventGroupCreate) refers to event_groups.o(.text.xEventGroupCreate) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSync) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.ARM.exidx.text.xEventGroupSetBits) refers to event_groups.o(.text.xEventGroupSetBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupWaitBits) refers to event_groups.o(.text.prvTestWaitCondition) for prvTestWaitCondition
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupWaitBits) refers to event_groups.o(.text.xEventGroupWaitBits) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.prvTestWaitCondition) refers to event_groups.o(.text.prvTestWaitCondition) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupClearBits) refers to event_groups.o(.text.xEventGroupClearBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBitsFromISR) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for vEventGroupClearBitsCallback
    event_groups.o(.text.xEventGroupClearBitsFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for xTimerPendFunctionCallFromISR
    event_groups.o(.ARM.exidx.text.xEventGroupClearBitsFromISR) refers to event_groups.o(.text.xEventGroupClearBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.vEventGroupDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    event_groups.o(.ARM.exidx.text.vEventGroupDelete) refers to event_groups.o(.text.vEventGroupDelete) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBitsFromISR) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for vEventGroupSetBitsCallback
    event_groups.o(.text.xEventGroupSetBitsFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for xTimerPendFunctionCallFromISR
    event_groups.o(.ARM.exidx.text.xEventGroupSetBitsFromISR) refers to event_groups.o(.text.xEventGroupSetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber) refers to event_groups.o(.text.uxEventGroupGetNumber) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.vEventGroupSetNumber) refers to event_groups.o(.text.vEventGroupSetNumber) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvHeapInit) for prvHeapInit
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xBlockAllocatedBit) for xBlockAllocatedBit
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.pvPortMalloc) refers to heap_4.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.ucHeap) for ucHeap
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xBlockAllocatedBit) for xBlockAllocatedBit
    heap_4.o(.ARM.exidx.text.prvHeapInit) refers to heap_4.o(.text.prvHeapInit) for [Anonymous Symbol]
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for [Anonymous Symbol]
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xBlockAllocatedBit) for xBlockAllocatedBit
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortFree) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.vPortFree) refers to heap_4.o(.text.vPortFree) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetFreeHeapSize) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_4.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_4.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    heap_4.o(.ARM.exidx.text.vPortGetHeapStats) refers to heap_4.o(.text.vPortGetHeapStats) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreateStatic) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreateStatic) refers to queue.o(.text.xQueueGenericCreateStatic) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseNewQueue) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue.o(.ARM.exidx.text.prvInitialiseNewQueue) refers to queue.o(.text.prvInitialiseNewQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.prvInitialiseMutex) refers to queue.o(.text.prvInitialiseMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutexStatic) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    queue.o(.text.xQueueCreateMutexStatic) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutexStatic) refers to queue.o(.text.xQueueCreateMutexStatic) for [Anonymous Symbol]
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGetMutexHolder) refers to queue.o(.text.xQueueGetMutexHolder) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR) refers to queue.o(.text.xQueueGetMutexHolderFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvIsQueueFull) for prvIsQueueFull
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphoreStatic) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphoreStatic) refers to queue.o(.text.xQueueCreateCountingSemaphoreStatic) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.prvCopyDataToQueue) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueFull) refers to queue.o(.text.prvIsQueueFull) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataFromQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.vQueueWaitForMessageRestricted) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    stream_buffer.o(.text.xStreamBufferGenericCreate) refers to stream_buffer.o(.text.prvInitialiseNewStreamBuffer) for prvInitialiseNewStreamBuffer
    stream_buffer.o(.ARM.exidx.text.xStreamBufferGenericCreate) refers to stream_buffer.o(.text.xStreamBufferGenericCreate) for [Anonymous Symbol]
    stream_buffer.o(.text.prvInitialiseNewStreamBuffer) refers to rt_memclr.o(.text) for __aeabi_memclr
    stream_buffer.o(.ARM.exidx.text.prvInitialiseNewStreamBuffer) refers to stream_buffer.o(.text.prvInitialiseNewStreamBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferGenericCreateStatic) refers to stream_buffer.o(.text.prvInitialiseNewStreamBuffer) for prvInitialiseNewStreamBuffer
    stream_buffer.o(.ARM.exidx.text.xStreamBufferGenericCreateStatic) refers to stream_buffer.o(.text.xStreamBufferGenericCreateStatic) for [Anonymous Symbol]
    stream_buffer.o(.text.vStreamBufferDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    stream_buffer.o(.text.vStreamBufferDelete) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    stream_buffer.o(.ARM.exidx.text.vStreamBufferDelete) refers to stream_buffer.o(.text.vStreamBufferDelete) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferReset) refers to stream_buffer.o(.text.prvInitialiseNewStreamBuffer) for prvInitialiseNewStreamBuffer
    stream_buffer.o(.text.xStreamBufferReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReset) refers to stream_buffer.o(.text.xStreamBufferReset) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSetTriggerLevel) refers to stream_buffer.o(.text.xStreamBufferSetTriggerLevel) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSpacesAvailable) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferBytesAvailable) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.ARM.exidx.text.xStreamBufferBytesAvailable) refers to stream_buffer.o(.text.xStreamBufferBytesAvailable) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.prvBytesInBuffer) refers to stream_buffer.o(.text.prvBytesInBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.vTaskSetTimeOutState) for vTaskSetTimeOutState
    stream_buffer.o(.text.xStreamBufferSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferSend) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for xTaskGenericNotifyStateClear
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    stream_buffer.o(.text.xStreamBufferSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    stream_buffer.o(.text.xStreamBufferSend) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for prvWriteMessageToBuffer
    stream_buffer.o(.text.xStreamBufferSend) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSend) refers to stream_buffer.o(.text.xStreamBufferSend) for [Anonymous Symbol]
    stream_buffer.o(.text.prvWriteMessageToBuffer) refers to stream_buffer.o(.text.prvWriteBytesToBuffer) for prvWriteBytesToBuffer
    stream_buffer.o(.ARM.exidx.text.prvWriteMessageToBuffer) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for prvWriteMessageToBuffer
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.xStreamBufferSendFromISR) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferReceive) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for xTaskGenericNotifyStateClear
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    stream_buffer.o(.text.xStreamBufferReceive) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for prvReadMessageFromBuffer
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceive) refers to stream_buffer.o(.text.xStreamBufferReceive) for [Anonymous Symbol]
    stream_buffer.o(.text.prvReadMessageFromBuffer) refers to stream_buffer.o(.text.prvReadBytesFromBuffer) for prvReadBytesFromBuffer
    stream_buffer.o(.ARM.exidx.text.prvReadMessageFromBuffer) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(.text.prvReadBytesFromBuffer) for prvReadBytesFromBuffer
    stream_buffer.o(.ARM.exidx.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) for [Anonymous Symbol]
    stream_buffer.o(.text.prvReadBytesFromBuffer) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    stream_buffer.o(.ARM.exidx.text.prvReadBytesFromBuffer) refers to stream_buffer.o(.text.prvReadBytesFromBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for prvReadMessageFromBuffer
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveFromISR) refers to stream_buffer.o(.text.xStreamBufferReceiveFromISR) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferIsEmpty) refers to stream_buffer.o(.text.xStreamBufferIsEmpty) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferIsFull) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(.ARM.exidx.text.xStreamBufferIsFull) refers to stream_buffer.o(.text.xStreamBufferIsFull) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSendCompletedFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSendCompletedFromISR) refers to stream_buffer.o(.text.xStreamBufferSendCompletedFromISR) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveCompletedFromISR) refers to stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.uxStreamBufferGetStreamBufferNumber) refers to stream_buffer.o(.text.uxStreamBufferGetStreamBufferNumber) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.vStreamBufferSetStreamBufferNumber) refers to stream_buffer.o(.text.vStreamBufferSetStreamBufferNumber) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.ucStreamBufferGetStreamBufferType) refers to stream_buffer.o(.text.ucStreamBufferGetStreamBufferType) for [Anonymous Symbol]
    stream_buffer.o(.text.prvWriteBytesToBuffer) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    stream_buffer.o(.ARM.exidx.text.prvWriteBytesToBuffer) refers to stream_buffer.o(.text.prvWriteBytesToBuffer) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreateStatic) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreateStatic) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreateStatic) refers to tasks.o(.text.xTaskCreateStatic) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseNewTask) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    tasks.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.prvDeleteTCB) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSwitchContext) refers to cmsis_os2.o(.text.vApplicationStackOverflowHook) for vApplicationStackOverflowHook
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended) refers to tasks.o(.text.prvTaskIsTaskSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) for vApplicationGetIdleTaskMemory
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreateStatic) for xTaskCreateStatic
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.text.vTaskStartScheduler) refers to timers.o(.text.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.uxTopUsedPriority) for uxTopUsedPriority
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks.o(.text.prvListTasksWithinSingleList) refers to tasks.o(.text.vTaskGetInfo) for vTaskGetInfo
    tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList) refers to tasks.o(.text.prvListTasksWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.uxTaskGetStackHighWaterMark) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.ulTaskGenericNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.text.vTaskGenericNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.text.ulTaskGenericNotifyValueClear) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvInitialiseTaskLists) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to tasks.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerCreateTimerTask) refers to cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) for vApplicationGetTimerTaskMemory
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvTimerTask) for prvTimerTask
    timers.o(.text.xTimerCreateTimerTask) refers to tasks.o(.text.xTaskCreateStatic) for xTaskCreateStatic
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerCreateTimerTask) refers to timers.o(.text.xTimerCreateTimerTask) for [Anonymous Symbol]
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList1) for xActiveTimerList1
    timers.o(.text.prvCheckForValidListAndQueue) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList2) for xActiveTimerList2
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage) for prvCheckForValidListAndQueue.ucStaticTimerQueueStorage
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue) for prvCheckForValidListAndQueue.xStaticTimerQueue
    timers.o(.text.prvCheckForValidListAndQueue) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue) refers to timers.o(.text.prvCheckForValidListAndQueue) for [Anonymous Symbol]
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvGetNextExpireTime) for prvGetNextExpireTime
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for prvProcessTimerOrBlockTask
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessReceivedCommands) for prvProcessReceivedCommands
    timers.o(.ARM.exidx.text.prvTimerTask) refers to timers.o(.text.prvTimerTask) for [Anonymous Symbol]
    timers.o(.text.xTimerCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    timers.o(.text.xTimerCreate) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreate) refers to timers.o(.text.xTimerCreate) for [Anonymous Symbol]
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.prvInitialiseNewTimer) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    timers.o(.ARM.exidx.text.prvInitialiseNewTimer) refers to timers.o(.text.prvInitialiseNewTimer) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateStatic) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreateStatic) refers to timers.o(.text.xTimerCreateStatic) for [Anonymous Symbol]
    timers.o(.text.xTimerGenericCommand) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerGenericCommand) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.ARM.exidx.text.xTimerGenericCommand) refers to timers.o(.text.xTimerGenericCommand) for [Anonymous Symbol]
    timers.o(.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.text.xTimerGetTimerDaemonTaskHandle) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetPeriod) refers to timers.o(.text.xTimerGetPeriod) for [Anonymous Symbol]
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetReloadMode) refers to timers.o(.text.vTimerSetReloadMode) for [Anonymous Symbol]
    timers.o(.text.uxTimerGetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.uxTimerGetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.uxTimerGetReloadMode) refers to timers.o(.text.uxTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetExpiryTime) refers to timers.o(.text.xTimerGetExpiryTime) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.pcTimerGetName) refers to timers.o(.text.pcTimerGetName) for [Anonymous Symbol]
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerIsTimerActive) refers to timers.o(.text.xTimerIsTimerActive) for [Anonymous Symbol]
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.pvTimerGetTimerID) refers to timers.o(.text.pvTimerGetTimerID) for [Anonymous Symbol]
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetTimerID) refers to timers.o(.text.vTimerSetTimerID) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCall) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCall) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.ARM.exidx.text.xTimerPendFunctionCall) refers to timers.o(.text.xTimerPendFunctionCall) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.uxTimerGetTimerNumber) refers to timers.o(.text.uxTimerGetTimerNumber) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.vTimerSetTimerNumber) refers to timers.o(.text.vTimerSetTimerNumber) for [Anonymous Symbol]
    timers.o(.text.prvGetNextExpireTime) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvGetNextExpireTime) refers to timers.o(.text.prvGetNextExpireTime) for [Anonymous Symbol]
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessTimerOrBlockTask) refers to queue.o(.text.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for [Anonymous Symbol]
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessReceivedCommands) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    timers.o(.text.prvProcessReceivedCommands) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.text.prvProcessReceivedCommands) refers to heap_4.o(.text.vPortFree) for vPortFree
    timers.o(.ARM.exidx.text.prvProcessReceivedCommands) refers to timers.o(.text.prvProcessReceivedCommands) for [Anonymous Symbol]
    timers.o(.text.prvSampleTimeNow) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.bss.prvSampleTimeNow.xLastTime) for prvSampleTimeNow.xLastTime
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.text.prvSwitchTimerLists) for prvSwitchTimerLists
    timers.o(.ARM.exidx.text.prvSampleTimeNow) refers to timers.o(.text.prvSampleTimeNow) for [Anonymous Symbol]
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvProcessExpiredTimer) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.ARM.exidx.text.prvProcessExpiredTimer) refers to timers.o(.text.prvProcessExpiredTimer) for [Anonymous Symbol]
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.ARM.exidx.text.prvSwitchTimerLists) refers to timers.o(.text.prvSwitchTimerLists) for [Anonymous Symbol]
    timers.o(.text.prvReloadTimer) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.ARM.exidx.text.prvReloadTimer) refers to timers.o(.text.prvReloadTimer) for [Anonymous Symbol]
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvInsertTimerInActiveList) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.ARM.exidx.text.prvInsertTimerInActiveList) refers to timers.o(.text.prvInsertTimerInActiveList) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortEnableVFP) for vPortEnableVFP
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to system_stm32l4xx.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEnableVFP) refers to port.o(.text.vPortEnableVFP) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.xPortSysTickHandler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.xPortSysTickHandler) refers to port.o(.text.xPortSysTickHandler) for [Anonymous Symbol]
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to clib_arm.o(.text._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32l476xx.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing puls.o(.text), (0 bytes).
    Removing puls.o(.ARM.exidx.text.SwInit), (8 bytes).
    Removing puls.o(.ARM.exidx.text.SwCenterInit), (8 bytes).
    Removing puls.o(.ARM.exidx.text.SwLeftInit), (8 bytes).
    Removing puls.o(.ARM.exidx.text.SwRightInit), (8 bytes).
    Removing puls.o(.ARM.exidx.text.SwUpInit), (8 bytes).
    Removing puls.o(.ARM.exidx.text.SwDownInit), (8 bytes).
    Removing puls.o(.text.SwCenterPress), (16 bytes).
    Removing puls.o(.ARM.exidx.text.SwCenterPress), (8 bytes).
    Removing puls.o(.text.SwLeftPress), (16 bytes).
    Removing puls.o(.ARM.exidx.text.SwLeftPress), (8 bytes).
    Removing puls.o(.text.SwRightPress), (16 bytes).
    Removing puls.o(.ARM.exidx.text.SwRightPress), (8 bytes).
    Removing puls.o(.text.SwUpPress), (16 bytes).
    Removing puls.o(.ARM.exidx.text.SwUpPress), (8 bytes).
    Removing puls.o(.text.SwDownPress), (16 bytes).
    Removing puls.o(.ARM.exidx.text.SwDownPress), (8 bytes).
    Removing puls.o(.text.SwTest), (70 bytes).
    Removing puls.o(.ARM.exidx.text.SwTest), (8 bytes).
    Removing puls.o(.text.SwLeftClick), (30 bytes).
    Removing puls.o(.ARM.exidx.text.SwLeftClick), (8 bytes).
    Removing puls.o(.text.SwRightClick), (30 bytes).
    Removing puls.o(.ARM.exidx.text.SwRightClick), (8 bytes).
    Removing puls.o(.text.SwRightClickOld), (54 bytes).
    Removing puls.o(.ARM.exidx.text.SwRightClickOld), (8 bytes).
    Removing puls.o(.text.SwLeftClickOld), (54 bytes).
    Removing puls.o(.ARM.exidx.text.SwLeftClickOld), (8 bytes).
    Removing puls.o(.text.SwRight2Click), (24 bytes).
    Removing puls.o(.ARM.exidx.text.SwRight2Click), (8 bytes).
    Removing puls.o(.text.SwDownLPress), (34 bytes).
    Removing puls.o(.ARM.exidx.text.SwDownLPress), (8 bytes).
    Removing puls.o(.text.SwLeftClickTask), (38 bytes).
    Removing puls.o(.ARM.exidx.text.SwLeftClickTask), (8 bytes).
    Removing puls.o(.text.LedVerdeSwTask), (58 bytes).
    Removing puls.o(.ARM.exidx.text.LedVerdeSwTask), (8 bytes).
    Removing puls.o(.text.TestPressSw), (48 bytes).
    Removing puls.o(.ARM.exidx.text.TestPressSw), (8 bytes).
    Removing puls.o(.text.TimeSwPress), (2 bytes).
    Removing puls.o(.ARM.exidx.text.TimeSwPress), (8 bytes).
    Removing puls.o(.bss.click), (1 bytes).
    Removing puls.o(.bss.SwRightClickOld.valSwOld), (1 bytes).
    Removing puls.o(.bss.SwLeftClickOld.valSwOld), (1 bytes).
    Removing puls.o(.data.LedVerdeSwTask.startTime), (4 bytes).
    Removing timer.o(.text), (0 bytes).
    Removing timer.o(.text.TIM1_CH1N_PWM), (146 bytes).
    Removing timer.o(.ARM.exidx.text.TIM1_CH1N_PWM), (8 bytes).
    Removing timer.o(.text.TIM1_CH2_PWM), (118 bytes).
    Removing timer.o(.ARM.exidx.text.TIM1_CH2_PWM), (8 bytes).
    Removing timer.o(.text.TIM1_CH3_PWM), (146 bytes).
    Removing timer.o(.ARM.exidx.text.TIM1_CH3_PWM), (8 bytes).
    Removing timer.o(.text.TIM1_CH4_PWM), (118 bytes).
    Removing timer.o(.ARM.exidx.text.TIM1_CH4_PWM), (8 bytes).
    Removing timer.o(.text.TIM1_SetCCR1), (14 bytes).
    Removing timer.o(.ARM.exidx.text.TIM1_SetCCR1), (8 bytes).
    Removing timer.o(.text.TIM2_CH2_PWM), (112 bytes).
    Removing timer.o(.ARM.exidx.text.TIM2_CH2_PWM), (8 bytes).
    Removing timer.o(.text.TIM4_CH2_PWM), (138 bytes).
    Removing timer.o(.ARM.exidx.text.TIM4_CH2_PWM), (8 bytes).
    Removing timer.o(.text.TIM4_CH1_InCapt), (140 bytes).
    Removing timer.o(.ARM.exidx.text.TIM4_CH1_InCapt), (8 bytes).
    Removing timer.o(.text.__NVIC_SetPriority), (14 bytes).
    Removing timer.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing timer.o(.text.__NVIC_EnableIRQ), (16 bytes).
    Removing timer.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing timer.o(.text.TIM4_CH1_InCapt_SM), (182 bytes).
    Removing timer.o(.ARM.exidx.text.TIM4_CH1_InCapt_SM), (8 bytes).
    Removing led.o(.text), (0 bytes).
    Removing led.o(.ARM.exidx.text.LedInit), (8 bytes).
    Removing led.o(.ARM.exidx.text.LedRossoInit), (8 bytes).
    Removing led.o(.ARM.exidx.text.LedVerdeInit), (8 bytes).
    Removing led.o(.ARM.exidx.text.LedRossoOn), (8 bytes).
    Removing led.o(.ARM.exidx.text.LedRossoOff), (8 bytes).
    Removing led.o(.text.LedRossoToggle), (18 bytes).
    Removing led.o(.ARM.exidx.text.LedRossoToggle), (8 bytes).
    Removing led.o(.ARM.exidx.text.LedVerdeOn), (8 bytes).
    Removing led.o(.ARM.exidx.text.LedVerdeOff), (8 bytes).
    Removing led.o(.text.LedVerdeToggle), (18 bytes).
    Removing led.o(.ARM.exidx.text.LedVerdeToggle), (8 bytes).
    Removing led.o(.text.LedRossoBlink), (38 bytes).
    Removing led.o(.ARM.exidx.text.LedRossoBlink), (8 bytes).
    Removing led.o(.text.LedVerdeBlink), (38 bytes).
    Removing led.o(.ARM.exidx.text.LedVerdeBlink), (8 bytes).
    Removing led.o(.text.LedTest), (38 bytes).
    Removing led.o(.ARM.exidx.text.LedTest), (8 bytes).
    Removing led.o(.text.LedBlink), (38 bytes).
    Removing led.o(.ARM.exidx.text.LedBlink), (8 bytes).
    Removing led.o(.text.LedRossoTask), (28 bytes).
    Removing led.o(.ARM.exidx.text.LedRossoTask), (8 bytes).
    Removing led.o(.text.LedVerdeTask), (28 bytes).
    Removing led.o(.ARM.exidx.text.LedVerdeTask), (8 bytes).
    Removing led.o(.text.LedVerdeBlinkTask), (16 bytes).
    Removing led.o(.ARM.exidx.text.LedVerdeBlinkTask), (8 bytes).
    Removing led.o(.text.LedRossoBlinkTask), (16 bytes).
    Removing led.o(.ARM.exidx.text.LedRossoBlinkTask), (8 bytes).
    Removing mot.o(.text), (0 bytes).
    Removing mot.o(.ARM.exidx.text.motInit), (8 bytes).
    Removing mot.o(.ARM.exidx.text.TIM1_CH2_Init), (8 bytes).
    Removing mot.o(.ARM.exidx.text.vTask_Motore), (8 bytes).
    Removing mot.o(.ARM.exidx.text.vTaskMotPA0), (8 bytes).
    Removing mot.o(.ARM.exidx.text.vTaskMotPA2), (8 bytes).
    Removing mot.o(.ARM.exidx.text.motStop), (8 bytes).
    Removing mot.o(.ARM.exidx.text.motStart), (8 bytes).
    Removing sysclock.o(.text), (0 bytes).
    Removing sysclock.o(.text.MSIInit), (92 bytes).
    Removing sysclock.o(.ARM.exidx.text.MSIInit), (8 bytes).
    Removing sysclock.o(.ARM.exidx.text.pllInit), (8 bytes).
    Removing arduino.o(.text), (0 bytes).
    Removing arduino.o(.ARM.exidx.text.pinMode), (8 bytes).
    Removing arduino.o(.text.pinModeEx), (94 bytes).
    Removing arduino.o(.ARM.exidx.text.pinModeEx), (8 bytes).
    Removing arduino.o(.ARM.exidx.text.digitalWrite), (8 bytes).
    Removing arduino.o(.ARM.exidx.text.digitalRead), (8 bytes).
    Removing arduino.o(.text.pulseIn), (4 bytes).
    Removing arduino.o(.ARM.exidx.text.pulseIn), (8 bytes).
    Removing ultrasuoni.o(.text), (0 bytes).
    Removing ultrasuoni.o(.ARM.exidx.text.trgInit), (8 bytes).
    Removing ultrasuoni.o(.ARM.exidx.text.echoInit), (8 bytes).
    Removing ultrasuoni.o(.ARM.exidx.text.ultrsInit), (8 bytes).
    Removing ultrasuoni.o(.ARM.exidx.text.vTask_SensUltrasuoni), (8 bytes).
    Removing ultrasuoni.o(.ARM.exidx.text.TIM4_CH1_Init), (8 bytes).
    Removing ultrasuoni.o(.ARM.exidx.text.TIM2_CH1_InCapt_SM), (8 bytes).
    Removing ultrasuoni.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing ultrasuoni.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing ultrasuoni.o(.ARM.exidx.text.TIM2_IRQHandler), (8 bytes).
    Removing infrarossi.o(.text), (0 bytes).
    Removing infrarossi.o(.ARM.exidx.text.irInit), (8 bytes).
    Removing infrarossi.o(.ARM.exidx.text.vTaskRilevaColore), (8 bytes).
    Removing infrarossi.o(.ARM.exidx.text.irRead), (8 bytes).
    Removing servo.o(.text), (0 bytes).
    Removing servo.o(.text.srvInit), (60 bytes).
    Removing servo.o(.ARM.exidx.text.srvInit), (8 bytes).
    Removing servo.o(.text.TIM5_CH2PWM_Init), (110 bytes).
    Removing servo.o(.ARM.exidx.text.TIM5_CH2PWM_Init), (8 bytes).
    Removing servo.o(.text.vTask_Servo), (10 bytes).
    Removing servo.o(.ARM.exidx.text.vTask_Servo), (8 bytes).
    Removing servo.o(.text.smistaBiancoSx), (64 bytes).
    Removing servo.o(.ARM.exidx.text.smistaBiancoSx), (8 bytes).
    Removing servo.o(.text.setPosSrv), (14 bytes).
    Removing servo.o(.ARM.exidx.text.setPosSrv), (8 bytes).
    Removing servo.o(.text.smistaNeroDx), (64 bytes).
    Removing servo.o(.ARM.exidx.text.smistaNeroDx), (8 bytes).
    Removing servo.o(.bss.srv_pos), (1 bytes).
    Removing servo.o(.bss.srvTon), (4 bytes).
    Removing buzzer.o(.text), (0 bytes).
    Removing buzzer.o(.ARM.exidx.text.BuzzerInit), (8 bytes).
    Removing buzzer.o(.ARM.exidx.text.vTaskBuzzerTest), (8 bytes).
    Removing clib_arm.o(.text), (0 bytes).
    Removing clib_arm.o(.ARM.exidx.text._platform_post_stackheap_init), (8 bytes).
    Removing clib_arm.o(.text.__user_perthread_libspace), (68 bytes).
    Removing clib_arm.o(.ARM.exidx.text.__user_perthread_libspace), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text.os_kernel_is_active), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text._mutex_initialize), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text._mutex_acquire), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text._mutex_release), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text._mutex_free), (8 bytes).
    Removing clib_arm.o(.bss.os_libspace), (480 bytes).
    Removing clib_arm.o(.bss.os_libspace_id), (16 bytes).
    Removing cmsis_os2.o(.text), (0 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelInitialize), (52 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing cmsis_os2.o(.text.IRQ_Context), (46 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.IRQ_Context), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetInfo), (56 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetState), (38 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelStart), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing cmsis_os2.o(.text.SVC_Setup), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.SVC_Setup), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelLock), (44 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelUnlock), (68 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelRestoreLock), (76 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetTickCount), (20 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetTickFreq), (6 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetSysTimerCount), (70 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetSysTimerFreq), (12 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadNew), (210 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetName), (30 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetId), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetState), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetStackSpace), (32 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadSetPriority), (46 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetPriority), (30 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadYield), (42 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadSuspend), (36 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadResume), (36 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadExit), (10 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadTerminate), (52 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetCount), (18 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadEnumerate), (118 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsSet), (144 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsClear), (100 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsGet), (56 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsWait), (198 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing cmsis_os2.o(.text.osDelay), (30 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing cmsis_os2.o(.text.osDelayUntil), (62 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerNew), (240 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing cmsis_os2.o(.text.TimerCallback), (24 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.TimerCallback), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerGetName), (30 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerStart), (64 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerStop), (78 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerIsRunning), (30 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerDelete), (88 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsNew), (76 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsNew), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsSet), (98 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsSet), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsClear), (92 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsClear), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsGet), (34 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsGet), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsWait), (108 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsWait), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsDelete), (36 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexNew), (116 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexAcquire), (82 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexRelease), (62 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexGetOwner), (32 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexDelete), (38 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreNew), (184 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreNew), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreAcquire), (112 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreAcquire), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreRelease), (102 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreRelease), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreGetCount), (32 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreDelete), (36 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueNew), (152 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueuePut), (154 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGet), (144 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetCapacity), (10 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetMsgSize), (10 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetCount), (32 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetSpace), (56 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueReset), (42 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueDelete), (36 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolNew), (290 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetName), (28 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolAlloc), (160 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing cmsis_os2.o(.text.AllocBlock), (16 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.AllocBlock), (8 bytes).
    Removing cmsis_os2.o(.text.CreateBlock), (28 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.CreateBlock), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolFree), (218 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing cmsis_os2.o(.text.FreeBlock), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.FreeBlock), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetCapacity), (24 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetBlockSize), (24 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetCount), (50 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetSpace), (46 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolDelete), (94 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.vApplicationStackOverflowHook), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.vApplicationGetIdleTaskMemory), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.vApplicationGetTimerTaskMemory), (8 bytes).
    Removing cmsis_os2.o(.text.__NVIC_SetPriority), (14 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing cmsis_os2.o(.bss.KernelState), (4 bytes).
    Removing cmsis_os2.o(.rodata.str1.4), (17 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.text.OS_Tick_Setup), (68 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.text.__NVIC_SetPriority), (14 bytes).
    Removing os_systick.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Enable), (50 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (52 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_AcknowledgeIRQ), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetIRQn), (6 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (14 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing os_systick.o(.bss.PendST), (1 bytes).
    Removing system_stm32l4xx.o(.text), (0 bytes).
    Removing system_stm32l4xx.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_stm32l4xx.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_stm32l4xx.o(.rodata.APBPrescTable), (8 bytes).
    Removing freertos_evr.o(.text), (0 bytes).
    Removing croutine.o(.text), (0 bytes).
    Removing event_groups.o(.text), (0 bytes).
    Removing event_groups.o(.text.xEventGroupCreateStatic), (24 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupCreateStatic), (8 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupCreate), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSync), (146 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSync), (8 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBits), (8 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupWaitBits), (8 bytes).
    Removing event_groups.o(.ARM.exidx.text.prvTestWaitCondition), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBits), (26 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBitsFromISR), (22 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupClearBitsCallback), (8 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback), (8 bytes).
    Removing event_groups.o(.text.xEventGroupGetBitsFromISR), (28 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupDelete), (46 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupDelete), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetBitsCallback), (8 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSetBitsFromISR), (22 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.uxEventGroupGetNumber), (10 bytes).
    Removing event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetNumber), (4 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetNumber), (8 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.text.vListInsertEnd), (28 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing heap_4.o(.text), (0 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvHeapInit), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_4.o(.text.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.xPortGetMinimumEverFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.vPortInitialiseBlocks), (2 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_4.o(.text.vPortGetHeapStats), (142 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortGetHeapStats), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreateStatic), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseNewQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseMutex), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutexStatic), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolder), (26 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolder), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolderFromISR), (12 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (46 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (40 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphoreStatic), (46 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphoreStatic), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (36 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueFull), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.text.xQueueGenericSendFromISR), (112 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveFromISR), (110 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (294 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (130 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (54 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (18 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (22 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (4 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (6 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (10 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (14 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted), (8 bytes).
    Removing stream_buffer.o(.text), (0 bytes).
    Removing stream_buffer.o(.text.xStreamBufferGenericCreate), (72 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferGenericCreate), (8 bytes).
    Removing stream_buffer.o(.text.prvInitialiseNewStreamBuffer), (36 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvInitialiseNewStreamBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferGenericCreateStatic), (62 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferGenericCreateStatic), (8 bytes).
    Removing stream_buffer.o(.text.vStreamBufferDelete), (22 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.vStreamBufferDelete), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReset), (62 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReset), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSetTriggerLevel), (20 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSetTriggerLevel), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSpacesAvailable), (40 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSpacesAvailable), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferBytesAvailable), (8 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferBytesAvailable), (8 bytes).
    Removing stream_buffer.o(.text.prvBytesInBuffer), (18 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvBytesInBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSend), (236 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSend), (8 bytes).
    Removing stream_buffer.o(.text.prvWriteMessageToBuffer), (80 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvWriteMessageToBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSendFromISR), (118 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSendFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceive), (158 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceive), (8 bytes).
    Removing stream_buffer.o(.text.prvReadMessageFromBuffer), (70 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvReadMessageFromBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes), (46 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferNextMessageLengthBytes), (8 bytes).
    Removing stream_buffer.o(.text.prvReadBytesFromBuffer), (72 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvReadBytesFromBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceiveFromISR), (114 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferIsEmpty), (14 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferIsEmpty), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferIsFull), (26 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferIsFull), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSendCompletedFromISR), (66 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSendCompletedFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR), (66 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveCompletedFromISR), (8 bytes).
    Removing stream_buffer.o(.text.uxStreamBufferGetStreamBufferNumber), (4 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.uxStreamBufferGetStreamBufferNumber), (8 bytes).
    Removing stream_buffer.o(.text.vStreamBufferSetStreamBufferNumber), (4 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.vStreamBufferSetStreamBufferNumber), (8 bytes).
    Removing stream_buffer.o(.text.ucStreamBufferGetStreamBufferType), (8 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.ucStreamBufferGetStreamBufferType), (8 bytes).
    Removing stream_buffer.o(.text.prvWriteBytesToBuffer), (72 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvWriteBytesToBuffer), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreateStatic), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.text.vTaskDelete), (170 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks.o(.text.xTaskDelayUntil), (114 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (136 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (30 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (40 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (220 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.text.vTaskSuspend), (174 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskResume), (150 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.text.prvTaskIsTaskSuspended), (28 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (180 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (36 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.text.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.uxTaskGetSystemState), (196 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks.o(.text.prvListTasksWithinSingleList), (100 bytes).
    Removing tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (28 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (38 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.uxTaskGetTaskNumber), (10 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskGetInfo), (126 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks.o(.text.prvTaskCheckFreeStackSpace), (32 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace), (8 bytes).
    Removing tasks.o(.text.uxTaskGetStackHighWaterMark), (22 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyTake), (128 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyWait), (160 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (248 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (300 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskGenericNotifyGiveFromISR), (240 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyStateClear), (46 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyValueClear), (44 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateTimerTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvTimerTask), (8 bytes).
    Removing timers.o(.text.xTimerCreate), (56 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreate), (8 bytes).
    Removing timers.o(.text.prvInitialiseNewTimer), (62 bytes).
    Removing timers.o(.ARM.exidx.text.prvInitialiseNewTimer), (8 bytes).
    Removing timers.o(.text.xTimerCreateStatic), (32 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateStatic), (8 bytes).
    Removing timers.o(.text.xTimerGenericCommand), (86 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGenericCommand), (8 bytes).
    Removing timers.o(.text.xTimerGetTimerDaemonTaskHandle), (12 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle), (8 bytes).
    Removing timers.o(.text.xTimerGetPeriod), (4 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetPeriod), (8 bytes).
    Removing timers.o(.text.vTimerSetReloadMode), (38 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetReloadMode), (8 bytes).
    Removing timers.o(.text.uxTimerGetReloadMode), (24 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetExpiryTime), (4 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetExpiryTime), (8 bytes).
    Removing timers.o(.text.pcTimerGetName), (4 bytes).
    Removing timers.o(.ARM.exidx.text.pcTimerGetName), (8 bytes).
    Removing timers.o(.text.xTimerIsTimerActive), (24 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerIsTimerActive), (8 bytes).
    Removing timers.o(.text.pvTimerGetTimerID), (18 bytes).
    Removing timers.o(.ARM.exidx.text.pvTimerGetTimerID), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerID), (18 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerID), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCallFromISR), (42 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCall), (42 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCall), (8 bytes).
    Removing timers.o(.text.uxTimerGetTimerNumber), (4 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetTimerNumber), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerNumber), (4 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerNumber), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvGetNextExpireTime), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessReceivedCommands), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSampleTimeNow), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessExpiredTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSwitchTimerLists), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvReloadTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvInsertTimerInActiveList), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnableVFP), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (2 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortSysTickHandler), (8 bytes).

660 unused section(s) (total 18210 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    Arduino.c                                0x00000000   Number         0  arduino.o ABSOLUTE
    Buzzer.c                                 0x00000000   Number         0  buzzer.o ABSOLUTE
    Infrarossi.c                             0x00000000   Number         0  infrarossi.o ABSOLUTE
    Led.c                                    0x00000000   Number         0  led.o ABSOLUTE
    Mot.c                                    0x00000000   Number         0  mot.o ABSOLUTE
    Puls.c                                   0x00000000   Number         0  puls.o ABSOLUTE
    RTE/Device/STM32L476VGTx/startup_stm32l476xx.s 0x00000000   Number         0  startup_stm32l476xx.o ABSOLUTE
    Servo.c                                  0x00000000   Number         0  servo.o ABSOLUTE
    SysClock.c                               0x00000000   Number         0  sysclock.o ABSOLUTE
    Ultrasuoni.c                             0x00000000   Number         0  ultrasuoni.o ABSOLUTE
    clib_arm.c                               0x00000000   Number         0  clib_arm.o ABSOLUTE
    cmsis_os2.c                              0x00000000   Number         0  cmsis_os2.o ABSOLUTE
    croutine.c                               0x00000000   Number         0  croutine.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    event_groups.c                           0x00000000   Number         0  event_groups.o ABSOLUTE
    freertos_evr.c                           0x00000000   Number         0  freertos_evr.o ABSOLUTE
    heap_4.c                                 0x00000000   Number         0  heap_4.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    stream_buffer.c                          0x00000000   Number         0  stream_buffer.o ABSOLUTE
    system_stm32l4xx.c                       0x00000000   Number         0  system_stm32l4xx.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    timer.c                                  0x00000000   Number         0  timer.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    RESET                                    0x08000000   Section      392  startup_stm32l476xx.o(RESET)
    !!!main                                  0x08000188   Section        8  __main.o(!!!main)
    !!!scatter                               0x08000190   Section       52  __scatter.o(!!!scatter)
    !!handler_copy                           0x080001c4   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x080001e0   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x080001fc   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000001          0x080001fe   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000001)
    .ARM.Collect$$libinit$$00000004          0x08000202   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x08000202   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x08000202   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x08000202   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x08000202   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x08000202   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x08000202   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x08000202   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x08000202   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x08000202   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x08000202   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x08000202   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x08000202   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x08000202   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x08000202   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x08000202   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x08000202   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x08000202   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x08000202   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x08000202   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x08000204   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x08000206   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x08000206   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x08000206   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x08000206   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x08000206   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x08000206   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x08000206   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x08000208   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x08000208   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x08000208   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x0800020e   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x08000216   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x0800021a   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x0800021a   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x08000222   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x08000224   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x08000224   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x08000228   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    $v0                                      0x08000230   Number         0  startup_stm32l476xx.o(.text)
    .text                                    0x08000230   Section       64  startup_stm32l476xx.o(.text)
    .text                                    0x08000270   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x080002fa   Section       16  aeabi_memset4.o(.text)
    .text                                    0x0800030a   Section       78  rt_memclr_w.o(.text)
    .text                                    0x08000358   Section        0  heapauxi.o(.text)
    .text                                    0x0800035e   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x080003c2   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x0800040c   Section        0  exit.o(.text)
    .text                                    0x08000420   Section        8  libspace.o(.text)
    .text                                    0x08000428   Section        0  sys_exit.o(.text)
    .text                                    0x08000434   Section        2  use_no_semi.o(.text)
    .text                                    0x08000436   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x08000438   Section        0  buzzer.o(.text.BuzzerInit)
    [Anonymous Symbol]                       0x08000480   Section        0  led.o(.text.LedInit)
    [Anonymous Symbol]                       0x0800048c   Section        0  led.o(.text.LedRossoInit)
    [Anonymous Symbol]                       0x080004b8   Section        0  led.o(.text.LedRossoOff)
    [Anonymous Symbol]                       0x080004cc   Section        0  led.o(.text.LedRossoOn)
    [Anonymous Symbol]                       0x080004e0   Section        0  led.o(.text.LedVerdeInit)
    [Anonymous Symbol]                       0x0800050c   Section        0  led.o(.text.LedVerdeOff)
    [Anonymous Symbol]                       0x08000520   Section        0  led.o(.text.LedVerdeOn)
    [Anonymous Symbol]                       0x08000540   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x080005a0   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x080005c0   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x080005e0   Number         0  port.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x080005f0   Section        0  puls.o(.text.SwCenterInit)
    [Anonymous Symbol]                       0x0800062c   Section        0  puls.o(.text.SwDownInit)
    [Anonymous Symbol]                       0x08000668   Section        0  puls.o(.text.SwInit)
    [Anonymous Symbol]                       0x08000680   Section        0  puls.o(.text.SwLeftInit)
    [Anonymous Symbol]                       0x080006bc   Section        0  puls.o(.text.SwRightInit)
    [Anonymous Symbol]                       0x080006f8   Section        0  puls.o(.text.SwUpInit)
    [Anonymous Symbol]                       0x08000734   Section        0  cmsis_os2.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x08000750   Section        0  system_stm32l4xx.o(.text.SystemCoreClockUpdate)
    [Anonymous Symbol]                       0x08000810   Section        0  system_stm32l4xx.o(.text.SystemInit)
    [Anonymous Symbol]                       0x08000854   Section        0  mot.o(.text.TIM1_CH2_Init)
    [Anonymous Symbol]                       0x080008cc   Section        0  ultrasuoni.o(.text.TIM2_CH1_InCapt_SM)
    [Anonymous Symbol]                       0x08000964   Section        0  ultrasuoni.o(.text.TIM2_IRQHandler)
    [Anonymous Symbol]                       0x0800098c   Section        0  ultrasuoni.o(.text.TIM4_CH1_Init)
    __NVIC_EnableIRQ                         0x08000a01   Thumb Code    16  ultrasuoni.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x08000a00   Section        0  ultrasuoni.o(.text.__NVIC_EnableIRQ)
    __NVIC_SetPriority                       0x08000a11   Thumb Code    14  ultrasuoni.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x08000a10   Section        0  ultrasuoni.o(.text.__NVIC_SetPriority)
    __tagsym$$used.1                         0x08000a20   Number         0  clib_arm.o(.text._mutex_acquire)
    [Anonymous Symbol]                       0x08000a20   Section        0  clib_arm.o(.text._mutex_acquire)
    __tagsym$$used.3                         0x08000a3c   Number         0  clib_arm.o(.text._mutex_free)
    [Anonymous Symbol]                       0x08000a3c   Section        0  clib_arm.o(.text._mutex_free)
    __tagsym$$used.0                         0x08000a6c   Number         0  clib_arm.o(.text._mutex_initialize)
    [Anonymous Symbol]                       0x08000a6c   Section        0  clib_arm.o(.text._mutex_initialize)
    __tagsym$$used.2                         0x08000ac0   Number         0  clib_arm.o(.text._mutex_release)
    [Anonymous Symbol]                       0x08000ac0   Section        0  clib_arm.o(.text._mutex_release)
    [Anonymous Symbol]                       0x08000adc   Section        0  clib_arm.o(.text._platform_post_stackheap_init)
    [Anonymous Symbol]                       0x08000ae0   Section        0  arduino.o(.text.digitalRead)
    [Anonymous Symbol]                       0x08000b00   Section        0  arduino.o(.text.digitalWrite)
    [Anonymous Symbol]                       0x08000b30   Section        0  ultrasuoni.o(.text.echoInit)
    [Anonymous Symbol]                       0x08000b6c   Section        0  infrarossi.o(.text.irInit)
    [Anonymous Symbol]                       0x08000bb0   Section        0  infrarossi.o(.text.irRead)
    [Anonymous Symbol]                       0x08000bbc   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x08000bf8   Section        0  mot.o(.text.motInit)
    [Anonymous Symbol]                       0x08000cc8   Section        0  mot.o(.text.motStart)
    [Anonymous Symbol]                       0x08000cd8   Section        0  mot.o(.text.motStop)
    os_kernel_is_active                      0x08000ce9   Thumb Code    16  clib_arm.o(.text.os_kernel_is_active)
    [Anonymous Symbol]                       0x08000ce8   Section        0  clib_arm.o(.text.os_kernel_is_active)
    [Anonymous Symbol]                       0x08000cf8   Section        0  arduino.o(.text.pinMode)
    [Anonymous Symbol]                       0x08000d4c   Section        0  sysclock.o(.text.pllInit)
    prvAddCurrentTaskToDelayedList           0x08000e41   Thumb Code   156  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x08000e40   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvAddNewTaskToReadyList                 0x08000edd   Thumb Code   204  tasks.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x08000edc   Section        0  tasks.o(.text.prvAddNewTaskToReadyList)
    prvCheckForValidListAndQueue             0x08000fa9   Thumb Code   106  timers.o(.text.prvCheckForValidListAndQueue)
    [Anonymous Symbol]                       0x08000fa8   Section        0  timers.o(.text.prvCheckForValidListAndQueue)
    prvCheckTasksWaitingTermination          0x08001015   Thumb Code    78  tasks.o(.text.prvCheckTasksWaitingTermination)
    [Anonymous Symbol]                       0x08001014   Section        0  tasks.o(.text.prvCheckTasksWaitingTermination)
    prvCopyDataFromQueue                     0x08001065   Thumb Code    38  queue.o(.text.prvCopyDataFromQueue)
    [Anonymous Symbol]                       0x08001064   Section        0  queue.o(.text.prvCopyDataFromQueue)
    prvCopyDataToQueue                       0x0800108d   Thumb Code   122  queue.o(.text.prvCopyDataToQueue)
    [Anonymous Symbol]                       0x0800108c   Section        0  queue.o(.text.prvCopyDataToQueue)
    prvDeleteTCB                             0x08001109   Thumb Code    32  tasks.o(.text.prvDeleteTCB)
    [Anonymous Symbol]                       0x08001108   Section        0  tasks.o(.text.prvDeleteTCB)
    prvGetDisinheritPriorityAfterTimeout     0x08001129   Thumb Code    18  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    [Anonymous Symbol]                       0x08001128   Section        0  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    prvGetNextExpireTime                     0x0800113d   Thumb Code    32  timers.o(.text.prvGetNextExpireTime)
    [Anonymous Symbol]                       0x0800113c   Section        0  timers.o(.text.prvGetNextExpireTime)
    prvHeapInit                              0x0800115d   Thumb Code   118  heap_4.o(.text.prvHeapInit)
    [Anonymous Symbol]                       0x0800115c   Section        0  heap_4.o(.text.prvHeapInit)
    prvIdleTask                              0x080011d5   Thumb Code    42  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x080011d4   Section        0  tasks.o(.text.prvIdleTask)
    prvInitialiseMutex                       0x08001201   Thumb Code    32  queue.o(.text.prvInitialiseMutex)
    [Anonymous Symbol]                       0x08001200   Section        0  queue.o(.text.prvInitialiseMutex)
    prvInitialiseNewQueue                    0x08001221   Thumb Code    32  queue.o(.text.prvInitialiseNewQueue)
    [Anonymous Symbol]                       0x08001220   Section        0  queue.o(.text.prvInitialiseNewQueue)
    prvInitialiseNewTask                     0x08001241   Thumb Code   152  tasks.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x08001240   Section        0  tasks.o(.text.prvInitialiseNewTask)
    prvInitialiseTaskLists                   0x080012d9   Thumb Code   112  tasks.o(.text.prvInitialiseTaskLists)
    [Anonymous Symbol]                       0x080012d8   Section        0  tasks.o(.text.prvInitialiseTaskLists)
    prvInsertBlockIntoFreeList               0x08001349   Thumb Code    90  heap_4.o(.text.prvInsertBlockIntoFreeList)
    [Anonymous Symbol]                       0x08001348   Section        0  heap_4.o(.text.prvInsertBlockIntoFreeList)
    prvInsertTimerInActiveList               0x080013a5   Thumb Code    64  timers.o(.text.prvInsertTimerInActiveList)
    [Anonymous Symbol]                       0x080013a4   Section        0  timers.o(.text.prvInsertTimerInActiveList)
    prvIsQueueEmpty                          0x080013e5   Thumb Code    24  queue.o(.text.prvIsQueueEmpty)
    [Anonymous Symbol]                       0x080013e4   Section        0  queue.o(.text.prvIsQueueEmpty)
    prvIsQueueFull                           0x080013fd   Thumb Code    28  queue.o(.text.prvIsQueueFull)
    [Anonymous Symbol]                       0x080013fc   Section        0  queue.o(.text.prvIsQueueFull)
    prvPortStartFirstTask                    0x08001419   Thumb Code    40  port.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x08001418   Section        0  port.o(.text.prvPortStartFirstTask)
    prvProcessExpiredTimer                   0x08001441   Thumb Code    62  timers.o(.text.prvProcessExpiredTimer)
    [Anonymous Symbol]                       0x08001440   Section        0  timers.o(.text.prvProcessExpiredTimer)
    prvProcessReceivedCommands               0x08001481   Thumb Code   250  timers.o(.text.prvProcessReceivedCommands)
    [Anonymous Symbol]                       0x08001480   Section        0  timers.o(.text.prvProcessReceivedCommands)
    prvProcessTimerOrBlockTask               0x0800157d   Thumb Code   128  timers.o(.text.prvProcessTimerOrBlockTask)
    [Anonymous Symbol]                       0x0800157c   Section        0  timers.o(.text.prvProcessTimerOrBlockTask)
    prvReloadTimer                           0x080015fd   Thumb Code    58  timers.o(.text.prvReloadTimer)
    [Anonymous Symbol]                       0x080015fc   Section        0  timers.o(.text.prvReloadTimer)
    prvResetNextTaskUnblockTime              0x08001639   Thumb Code    38  tasks.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x08001638   Section        0  tasks.o(.text.prvResetNextTaskUnblockTime)
    prvSampleTimeNow                         0x08001661   Thumb Code    42  timers.o(.text.prvSampleTimeNow)
    [Anonymous Symbol]                       0x08001660   Section        0  timers.o(.text.prvSampleTimeNow)
    prvSwitchTimerLists                      0x0800168d   Thumb Code    52  timers.o(.text.prvSwitchTimerLists)
    [Anonymous Symbol]                       0x0800168c   Section        0  timers.o(.text.prvSwitchTimerLists)
    prvTaskExitError                         0x080016c1   Thumb Code    34  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x080016c0   Section        0  port.o(.text.prvTaskExitError)
    prvTestWaitCondition                     0x080016e5   Thumb Code    24  event_groups.o(.text.prvTestWaitCondition)
    [Anonymous Symbol]                       0x080016e4   Section        0  event_groups.o(.text.prvTestWaitCondition)
    prvTimerTask                             0x080016fd   Thumb Code    22  timers.o(.text.prvTimerTask)
    [Anonymous Symbol]                       0x080016fc   Section        0  timers.o(.text.prvTimerTask)
    prvUnlockQueue                           0x08001715   Thumb Code   114  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x08001714   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x08001788   Section        0  heap_4.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x0800189c   Section        0  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    [Anonymous Symbol]                       0x080018b4   Section        0  port.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x080018dc   Section        0  ultrasuoni.o(.text.trgInit)
    [Anonymous Symbol]                       0x08001918   Section        0  ultrasuoni.o(.text.ultrsInit)
    [Anonymous Symbol]                       0x08001964   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x08001988   Section        0  tasks.o(.text.uxTaskResetEventItemValue)
    [Anonymous Symbol]                       0x080019a4   Section        0  cmsis_os2.o(.text.vApplicationGetIdleTaskMemory)
    [Anonymous Symbol]                       0x080019c0   Section        0  cmsis_os2.o(.text.vApplicationGetTimerTaskMemory)
    [Anonymous Symbol]                       0x080019dc   Section        0  cmsis_os2.o(.text.vApplicationStackOverflowHook)
    [Anonymous Symbol]                       0x080019e0   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x080019f8   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x08001a00   Section        0  list.o(.text.vListInsert)
    vPortEnableVFP                           0x08001a3d   Thumb Code    20  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x08001a3c   Section        0  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x08001a50   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x08001a70   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x08001a8c   Section        0  heap_4.o(.text.vPortFree)
    [Anonymous Symbol]                       0x08001af0   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x08001b24   Section        0  queue.o(.text.vQueueDelete)
    [Anonymous Symbol]                       0x08001b34   Section        0  queue.o(.text.vQueueWaitForMessageRestricted)
    [Anonymous Symbol]                       0x08001b78   Section        0  buzzer.o(.text.vTaskBuzzerTest)
    [Anonymous Symbol]                       0x08001bb0   Section        0  tasks.o(.text.vTaskDelay)
    [Anonymous Symbol]                       0x08001be4   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x08001c00   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x08001c10   Section        0  mot.o(.text.vTaskMotPA0)
    [Anonymous Symbol]                       0x08001c38   Section        0  mot.o(.text.vTaskMotPA2)
    [Anonymous Symbol]                       0x08001c60   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x08001c80   Section        0  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    [Anonymous Symbol]                       0x08001cdc   Section        0  tasks.o(.text.vTaskPlaceOnUnorderedEventList)
    [Anonymous Symbol]                       0x08001d30   Section        0  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    [Anonymous Symbol]                       0x08001db0   Section        0  tasks.o(.text.vTaskRemoveFromUnorderedEventList)
    [Anonymous Symbol]                       0x08001e64   Section        0  infrarossi.o(.text.vTaskRilevaColore)
    [Anonymous Symbol]                       0x08001ebc   Section        0  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x08001f50   Section        0  tasks.o(.text.vTaskSuspendAll)
    __tagsym$$used.0                         0x08001f60   Number         0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x08001f60   Section        0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x08002004   Section        0  mot.o(.text.vTask_Motore)
    [Anonymous Symbol]                       0x08002034   Section        0  ultrasuoni.o(.text.vTask_SensUltrasuoni)
    [Anonymous Symbol]                       0x08002040   Section        0  event_groups.o(.text.xEventGroupCreate)
    [Anonymous Symbol]                       0x0800205c   Section        0  event_groups.o(.text.xEventGroupSetBits)
    [Anonymous Symbol]                       0x080020d0   Section        0  event_groups.o(.text.xEventGroupWaitBits)
    [Anonymous Symbol]                       0x08002180   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x080021cc   Section        0  port.o(.text.xPortSysTickHandler)
    [Anonymous Symbol]                       0x080021fc   Section        0  queue.o(.text.xQueueCreateMutex)
    [Anonymous Symbol]                       0x08002214   Section        0  queue.o(.text.xQueueCreateMutexStatic)
    [Anonymous Symbol]                       0x08002238   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x0800228c   Section        0  queue.o(.text.xQueueGenericCreateStatic)
    [Anonymous Symbol]                       0x080022c8   Section        0  queue.o(.text.xQueueGenericReset)
    [Anonymous Symbol]                       0x08002348   Section        0  queue.o(.text.xQueueGenericSend)
    [Anonymous Symbol]                       0x08002484   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x080025b8   Section        0  queue.o(.text.xQueueSemaphoreTake)
    [Anonymous Symbol]                       0x08002720   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x08002780   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x080027e8   Section        0  tasks.o(.text.xTaskCreateStatic)
    [Anonymous Symbol]                       0x08002828   Section        0  tasks.o(.text.xTaskGetSchedulerState)
    [Anonymous Symbol]                       0x08002850   Section        0  tasks.o(.text.xTaskGetTickCount)
    [Anonymous Symbol]                       0x0800285c   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x080029f0   Section        0  tasks.o(.text.xTaskPriorityDisinherit)
    [Anonymous Symbol]                       0x08002a60   Section        0  tasks.o(.text.xTaskPriorityInherit)
    [Anonymous Symbol]                       0x08002b08   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x08002be0   Section        0  tasks.o(.text.xTaskResumeAll)
    [Anonymous Symbol]                       0x08002d3c   Section        0  timers.o(.text.xTimerCreateTimerTask)
    $v0                                      0x08002da4   Number         0  fpinit.o(x$fpl$fpinit)
    x$fpl$fpinit                             0x08002da4   Section       26  fpinit.o(x$fpl$fpinit)
    uxCriticalNesting                        0x20000004   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x20000004   Section        0  port.o(.data.uxCriticalNesting)
    .bss                                     0x20000008   Section       96  libspace.o(.bss)
    clib_mutex_cb                            0x20000068   Data         400  clib_arm.o(.bss.clib_mutex_cb)
    [Anonymous Symbol]                       0x20000068   Section        0  clib_arm.o(.bss.clib_mutex_cb)
    clib_mutex_id                            0x200001f8   Data          20  clib_arm.o(.bss.clib_mutex_id)
    [Anonymous Symbol]                       0x200001f8   Section        0  clib_arm.o(.bss.clib_mutex_id)
    prvCheckForValidListAndQueue.ucStaticTimerQueueStorage 0x2000020c   Data          80  timers.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage)
    [Anonymous Symbol]                       0x2000020c   Section        0  timers.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage)
    prvCheckForValidListAndQueue.xStaticTimerQueue 0x2000025c   Data          80  timers.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue)
    [Anonymous Symbol]                       0x2000025c   Section        0  timers.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue)
    prvSampleTimeNow.xLastTime               0x200002ac   Data           4  timers.o(.bss.prvSampleTimeNow.xLastTime)
    [Anonymous Symbol]                       0x200002ac   Section        0  timers.o(.bss.prvSampleTimeNow.xLastTime)
    pxCurrentTimerList                       0x200002b4   Data           4  timers.o(.bss.pxCurrentTimerList)
    [Anonymous Symbol]                       0x200002b4   Section        0  timers.o(.bss.pxCurrentTimerList)
    pxDelayedTaskList                        0x200002b8   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x200002b8   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxEnd                                    0x200002bc   Data           4  heap_4.o(.bss.pxEnd)
    [Anonymous Symbol]                       0x200002bc   Section        0  heap_4.o(.bss.pxEnd)
    pxOverflowDelayedTaskList                0x200002c0   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x200002c0   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxOverflowTimerList                      0x200002c4   Data           4  timers.o(.bss.pxOverflowTimerList)
    [Anonymous Symbol]                       0x200002c4   Section        0  timers.o(.bss.pxOverflowTimerList)
    pxReadyTasksLists                        0x200002c8   Data        1120  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x200002c8   Section        0  tasks.o(.bss.pxReadyTasksLists)
    ucHeap                                   0x20000728   Data        8192  heap_4.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x20000728   Section        0  heap_4.o(.bss.ucHeap)
    uxCurrentNumberOfTasks                   0x20002728   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x20002728   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x2000272c   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x2000272c   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x20002730   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x20002730   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x20002734   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x20002734   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x20002738   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x20002738   Section        0  tasks.o(.bss.uxTopReadyPriority)
    vApplicationGetIdleTaskMemory.Idle_Stack 0x2000273c   Data         512  cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_Stack)
    [Anonymous Symbol]                       0x2000273c   Section        0  cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_Stack)
    vApplicationGetIdleTaskMemory.Idle_TCB   0x2000293c   Data          92  cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_TCB)
    [Anonymous Symbol]                       0x2000293c   Section        0  cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_TCB)
    vApplicationGetTimerTaskMemory.Timer_Stack 0x20002998   Data         320  cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_Stack)
    [Anonymous Symbol]                       0x20002998   Section        0  cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_Stack)
    vApplicationGetTimerTaskMemory.Timer_TCB 0x20002ad8   Data          92  cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_TCB)
    [Anonymous Symbol]                       0x20002ad8   Section        0  cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_TCB)
    xActiveTimerList1                        0x20002b34   Data          20  timers.o(.bss.xActiveTimerList1)
    [Anonymous Symbol]                       0x20002b34   Section        0  timers.o(.bss.xActiveTimerList1)
    xActiveTimerList2                        0x20002b48   Data          20  timers.o(.bss.xActiveTimerList2)
    [Anonymous Symbol]                       0x20002b48   Section        0  timers.o(.bss.xActiveTimerList2)
    xBlockAllocatedBit                       0x20002b5c   Data           1  heap_4.o(.bss.xBlockAllocatedBit)
    [Anonymous Symbol]                       0x20002b5c   Section        0  heap_4.o(.bss.xBlockAllocatedBit)
    xDelayedTaskList1                        0x20002b60   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x20002b60   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x20002b74   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x20002b74   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xFreeBytesRemaining                      0x20002b8c   Data           4  heap_4.o(.bss.xFreeBytesRemaining)
    [Anonymous Symbol]                       0x20002b8c   Section        0  heap_4.o(.bss.xFreeBytesRemaining)
    xIdleTaskHandle                          0x20002b90   Data           4  tasks.o(.bss.xIdleTaskHandle)
    [Anonymous Symbol]                       0x20002b90   Section        0  tasks.o(.bss.xIdleTaskHandle)
    xMinimumEverFreeBytesRemaining           0x20002b94   Data           4  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    [Anonymous Symbol]                       0x20002b94   Section        0  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    xNextTaskUnblockTime                     0x20002b98   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x20002b98   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x20002b9c   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x20002b9c   Section        0  tasks.o(.bss.xNumOfOverflows)
    xNumberOfSuccessfulAllocations           0x20002ba0   Data           4  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    [Anonymous Symbol]                       0x20002ba0   Section        0  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    xNumberOfSuccessfulFrees                 0x20002ba4   Data           4  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    [Anonymous Symbol]                       0x20002ba4   Section        0  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    xPendedTicks                             0x20002ba8   Data           4  tasks.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x20002ba8   Section        0  tasks.o(.bss.xPendedTicks)
    xPendingReadyList                        0x20002bac   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x20002bac   Section        0  tasks.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x20002bc0   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x20002bc0   Section        0  tasks.o(.bss.xSchedulerRunning)
    xStart                                   0x20002bc4   Data           8  heap_4.o(.bss.xStart)
    [Anonymous Symbol]                       0x20002bc4   Section        0  heap_4.o(.bss.xStart)
    xSuspendedTaskList                       0x20002bcc   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x20002bcc   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x20002be0   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x20002be0   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x20002bf4   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x20002bf4   Section        0  tasks.o(.bss.xTickCount)
    xTimerQueue                              0x20002bf8   Data           4  timers.o(.bss.xTimerQueue)
    [Anonymous Symbol]                       0x20002bf8   Section        0  timers.o(.bss.xTimerQueue)
    xTimerTaskHandle                         0x20002bfc   Data           4  timers.o(.bss.xTimerTaskHandle)
    [Anonymous Symbol]                       0x20002bfc   Section        0  timers.o(.bss.xTimerTaskHandle)
    xYieldPending                            0x20002c00   Data           4  tasks.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x20002c00   Section        0  tasks.o(.bss.xYieldPending)
    Heap_Mem                                 0x20002c08   Data         512  startup_stm32l476xx.o(HEAP)
    HEAP                                     0x20002c08   Section      512  startup_stm32l476xx.o(HEAP)
    Stack_Mem                                0x20002e08   Data        1024  startup_stm32l476xx.o(STACK)
    STACK                                    0x20002e08   Section     1024  startup_stm32l476xx.o(STACK)
    __initial_sp                             0x20003208   Data           0  startup_stm32l476xx.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x00000188   Number         0  startup_stm32l476xx.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32l476xx.o(RESET)
    __Vectors_End                            0x08000188   Data           0  startup_stm32l476xx.o(RESET)
    __main                                   0x08000189   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x08000191   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x08000191   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x08000191   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x0800019f   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x080001c5   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x080001e1   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x080001fd   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x080001ff   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000001)
    __rt_lib_init_alloca_1                   0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_trap_1                  0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_preinit_1                  0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x08000203   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_shutdown                        0x08000205   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x08000207   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x08000207   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x08000207   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x08000207   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x08000207   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x08000207   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x08000207   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x08000209   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x08000209   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x08000209   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x0800020f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x08000217   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x0800021b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x0800021b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x08000223   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x08000225   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x08000225   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x08000229   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x08000231   Thumb Code     8  startup_stm32l476xx.o(.text)
    NMI_Handler                              0x08000239   Thumb Code     2  startup_stm32l476xx.o(.text)
    HardFault_Handler                        0x0800023b   Thumb Code     2  startup_stm32l476xx.o(.text)
    MemManage_Handler                        0x0800023d   Thumb Code     2  startup_stm32l476xx.o(.text)
    BusFault_Handler                         0x0800023f   Thumb Code     2  startup_stm32l476xx.o(.text)
    UsageFault_Handler                       0x08000241   Thumb Code     2  startup_stm32l476xx.o(.text)
    DebugMon_Handler                         0x08000245   Thumb Code     2  startup_stm32l476xx.o(.text)
    ADC1_2_IRQHandler                        0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    ADC3_IRQHandler                          0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    CAN1_RX0_IRQHandler                      0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    CAN1_RX1_IRQHandler                      0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    CAN1_SCE_IRQHandler                      0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    CAN1_TX_IRQHandler                       0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    COMP_IRQHandler                          0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    DFSDM1_FLT0_IRQHandler                   0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    DFSDM1_FLT1_IRQHandler                   0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    DFSDM1_FLT2_IRQHandler                   0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    DFSDM1_FLT3_IRQHandler                   0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    DMA1_Channel1_IRQHandler                 0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    DMA1_Channel2_IRQHandler                 0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    DMA1_Channel3_IRQHandler                 0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    DMA1_Channel4_IRQHandler                 0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    DMA1_Channel5_IRQHandler                 0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    DMA1_Channel6_IRQHandler                 0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    DMA1_Channel7_IRQHandler                 0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    DMA2_Channel1_IRQHandler                 0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    DMA2_Channel2_IRQHandler                 0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    DMA2_Channel3_IRQHandler                 0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    DMA2_Channel4_IRQHandler                 0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    DMA2_Channel5_IRQHandler                 0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    DMA2_Channel6_IRQHandler                 0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    DMA2_Channel7_IRQHandler                 0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    EXTI0_IRQHandler                         0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    EXTI15_10_IRQHandler                     0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    EXTI1_IRQHandler                         0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    EXTI2_IRQHandler                         0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    EXTI3_IRQHandler                         0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    EXTI4_IRQHandler                         0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    EXTI9_5_IRQHandler                       0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    FLASH_IRQHandler                         0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    FMC_IRQHandler                           0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    FPU_IRQHandler                           0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    I2C1_ER_IRQHandler                       0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    I2C1_EV_IRQHandler                       0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    I2C2_ER_IRQHandler                       0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    I2C2_EV_IRQHandler                       0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    I2C3_ER_IRQHandler                       0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    I2C3_EV_IRQHandler                       0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    LCD_IRQHandler                           0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    LPTIM1_IRQHandler                        0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    LPTIM2_IRQHandler                        0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    LPUART1_IRQHandler                       0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    OTG_FS_IRQHandler                        0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    PVD_PVM_IRQHandler                       0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    QUADSPI_IRQHandler                       0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    RCC_IRQHandler                           0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    RNG_IRQHandler                           0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    RTC_Alarm_IRQHandler                     0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    RTC_WKUP_IRQHandler                      0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    SAI1_IRQHandler                          0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    SAI2_IRQHandler                          0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    SDMMC1_IRQHandler                        0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    SPI1_IRQHandler                          0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    SPI2_IRQHandler                          0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    SPI3_IRQHandler                          0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    SWPMI1_IRQHandler                        0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    TAMP_STAMP_IRQHandler                    0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    TIM1_BRK_TIM15_IRQHandler                0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    TIM1_CC_IRQHandler                       0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    TIM1_TRG_COM_TIM17_IRQHandler            0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    TIM1_UP_TIM16_IRQHandler                 0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    TIM3_IRQHandler                          0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    TIM4_IRQHandler                          0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    TIM5_IRQHandler                          0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    TIM6_DAC_IRQHandler                      0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    TIM7_IRQHandler                          0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    TIM8_BRK_IRQHandler                      0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    TIM8_CC_IRQHandler                       0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    TIM8_TRG_COM_IRQHandler                  0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    TIM8_UP_IRQHandler                       0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    TSC_IRQHandler                           0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    UART4_IRQHandler                         0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    UART5_IRQHandler                         0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    USART1_IRQHandler                        0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    USART2_IRQHandler                        0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    USART3_IRQHandler                        0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    WWDG_IRQHandler                          0x0800024b   Thumb Code     0  startup_stm32l476xx.o(.text)
    __user_initial_stackheap                 0x0800024d   Thumb Code     0  startup_stm32l476xx.o(.text)
    __aeabi_memcpy                           0x08000271   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x08000271   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x080002d7   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memset4                          0x080002fb   Thumb Code    16  aeabi_memset4.o(.text)
    __aeabi_memset8                          0x080002fb   Thumb Code     0  aeabi_memset4.o(.text)
    __aeabi_memclr4                          0x0800030b   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x0800030b   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x0800030b   Thumb Code     0  rt_memclr_w.o(.text)
    _memset_w                                0x0800030f   Thumb Code    74  rt_memclr_w.o(.text)
    __use_two_region_memory                  0x08000359   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x0800035b   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x0800035d   Thumb Code     2  heapauxi.o(.text)
    __aeabi_memcpy4                          0x0800035f   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x0800035f   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x0800035f   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x080003a7   Thumb Code     0  rt_memcpy_w.o(.text)
    __user_setup_stackheap                   0x080003c3   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x0800040d   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x08000421   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x08000421   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x08000429   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x08000435   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x08000435   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x08000437   Thumb Code     0  indicate_semi.o(.text)
    BuzzerInit                               0x08000439   Thumb Code    48  buzzer.o(.text.BuzzerInit)
    LedInit                                  0x08000481   Thumb Code    12  led.o(.text.LedInit)
    LedRossoInit                             0x0800048d   Thumb Code    42  led.o(.text.LedRossoInit)
    LedRossoOff                              0x080004b9   Thumb Code    18  led.o(.text.LedRossoOff)
    LedRossoOn                               0x080004cd   Thumb Code    18  led.o(.text.LedRossoOn)
    LedVerdeInit                             0x080004e1   Thumb Code    42  led.o(.text.LedVerdeInit)
    LedVerdeOff                              0x0800050d   Thumb Code    18  led.o(.text.LedVerdeOff)
    LedVerdeOn                               0x08000521   Thumb Code    18  led.o(.text.LedVerdeOn)
    PendSV_Handler                           0x08000541   Thumb Code   100  port.o(.text.PendSV_Handler)
    SVC_Handler                              0x080005c1   Thumb Code    36  port.o(.text.SVC_Handler)
    SwCenterInit                             0x080005f1   Thumb Code    60  puls.o(.text.SwCenterInit)
    SwDownInit                               0x0800062d   Thumb Code    60  puls.o(.text.SwDownInit)
    SwInit                                   0x08000669   Thumb Code    24  puls.o(.text.SwInit)
    SwLeftInit                               0x08000681   Thumb Code    60  puls.o(.text.SwLeftInit)
    SwRightInit                              0x080006bd   Thumb Code    60  puls.o(.text.SwRightInit)
    SwUpInit                                 0x080006f9   Thumb Code    60  puls.o(.text.SwUpInit)
    SysTick_Handler                          0x08000735   Thumb Code    26  cmsis_os2.o(.text.SysTick_Handler)
    SystemCoreClockUpdate                    0x08000751   Thumb Code   190  system_stm32l4xx.o(.text.SystemCoreClockUpdate)
    SystemInit                               0x08000811   Thumb Code    68  system_stm32l4xx.o(.text.SystemInit)
    TIM1_CH2_Init                            0x08000855   Thumb Code   120  mot.o(.text.TIM1_CH2_Init)
    TIM2_CH1_InCapt_SM                       0x080008cd   Thumb Code   152  ultrasuoni.o(.text.TIM2_CH1_InCapt_SM)
    TIM2_IRQHandler                          0x08000965   Thumb Code    38  ultrasuoni.o(.text.TIM2_IRQHandler)
    TIM4_CH1_Init                            0x0800098d   Thumb Code   114  ultrasuoni.o(.text.TIM4_CH1_Init)
    _mutex_acquire                           0x08000a21   Thumb Code    26  clib_arm.o(.text._mutex_acquire)
    _mutex_free                              0x08000a3d   Thumb Code    48  clib_arm.o(.text._mutex_free)
    _mutex_initialize                        0x08000a6d   Thumb Code    82  clib_arm.o(.text._mutex_initialize)
    _mutex_release                           0x08000ac1   Thumb Code    28  clib_arm.o(.text._mutex_release)
    _platform_post_stackheap_init            0x08000add   Thumb Code     2  clib_arm.o(.text._platform_post_stackheap_init)
    digitalRead                              0x08000ae1   Thumb Code    32  arduino.o(.text.digitalRead)
    digitalWrite                             0x08000b01   Thumb Code    48  arduino.o(.text.digitalWrite)
    echoInit                                 0x08000b31   Thumb Code    60  ultrasuoni.o(.text.echoInit)
    irInit                                   0x08000b6d   Thumb Code    44  infrarossi.o(.text.irInit)
    irRead                                   0x08000bb1   Thumb Code    10  infrarossi.o(.text.irRead)
    main                                     0x08000bbd   Thumb Code    58  main.o(.text.main)
    motInit                                  0x08000bf9   Thumb Code   144  mot.o(.text.motInit)
    motStart                                 0x08000cc9   Thumb Code    14  mot.o(.text.motStart)
    motStop                                  0x08000cd9   Thumb Code    14  mot.o(.text.motStop)
    pinMode                                  0x08000cf9   Thumb Code    84  arduino.o(.text.pinMode)
    pllInit                                  0x08000d4d   Thumb Code   242  sysclock.o(.text.pllInit)
    pvPortMalloc                             0x08001789   Thumb Code   276  heap_4.o(.text.pvPortMalloc)
    pvTaskIncrementMutexHeldCount            0x0800189d   Thumb Code    24  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    pxPortInitialiseStack                    0x080018b5   Thumb Code    40  port.o(.text.pxPortInitialiseStack)
    trgInit                                  0x080018dd   Thumb Code    58  ultrasuoni.o(.text.trgInit)
    ultrsInit                                0x08001919   Thumb Code    48  ultrasuoni.o(.text.ultrsInit)
    uxListRemove                             0x08001965   Thumb Code    36  list.o(.text.uxListRemove)
    uxTaskResetEventItemValue                0x08001989   Thumb Code    26  tasks.o(.text.uxTaskResetEventItemValue)
    vApplicationGetIdleTaskMemory            0x080019a5   Thumb Code    26  cmsis_os2.o(.text.vApplicationGetIdleTaskMemory)
    vApplicationGetTimerTaskMemory           0x080019c1   Thumb Code    26  cmsis_os2.o(.text.vApplicationGetTimerTaskMemory)
    vApplicationStackOverflowHook            0x080019dd   Thumb Code     2  cmsis_os2.o(.text.vApplicationStackOverflowHook)
    vListInitialise                          0x080019e1   Thumb Code    22  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x080019f9   Thumb Code     6  list.o(.text.vListInitialiseItem)
    vListInsert                              0x08001a01   Thumb Code    58  list.o(.text.vListInsert)
    vPortEnterCritical                       0x08001a51   Thumb Code    32  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x08001a71   Thumb Code    26  port.o(.text.vPortExitCritical)
    vPortFree                                0x08001a8d   Thumb Code   100  heap_4.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x08001af1   Thumb Code    52  port.o(.text.vPortSetupTimerInterrupt)
    vQueueDelete                             0x08001b25   Thumb Code    16  queue.o(.text.vQueueDelete)
    vQueueWaitForMessageRestricted           0x08001b35   Thumb Code    68  queue.o(.text.vQueueWaitForMessageRestricted)
    vTaskBuzzerTest                          0x08001b79   Thumb Code    54  buzzer.o(.text.vTaskBuzzerTest)
    vTaskDelay                               0x08001bb1   Thumb Code    52  tasks.o(.text.vTaskDelay)
    vTaskInternalSetTimeOutState             0x08001be5   Thumb Code    26  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x08001c01   Thumb Code    14  tasks.o(.text.vTaskMissedYield)
    vTaskMotPA0                              0x08001c11   Thumb Code    40  mot.o(.text.vTaskMotPA0)
    vTaskMotPA2                              0x08001c39   Thumb Code    40  mot.o(.text.vTaskMotPA2)
    vTaskPlaceOnEventList                    0x08001c61   Thumb Code    30  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x08001c81   Thumb Code    90  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    vTaskPlaceOnUnorderedEventList           0x08001cdd   Thumb Code    84  tasks.o(.text.vTaskPlaceOnUnorderedEventList)
    vTaskPriorityDisinheritAfterTimeout      0x08001d31   Thumb Code   128  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    vTaskRemoveFromUnorderedEventList        0x08001db1   Thumb Code   180  tasks.o(.text.vTaskRemoveFromUnorderedEventList)
    vTaskRilevaColore                        0x08001e65   Thumb Code    86  infrarossi.o(.text.vTaskRilevaColore)
    vTaskStartScheduler                      0x08001ebd   Thumb Code   140  tasks.o(.text.vTaskStartScheduler)
    vTaskSuspendAll                          0x08001f51   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x08001f61   Thumb Code   164  tasks.o(.text.vTaskSwitchContext)
    vTask_Motore                             0x08002005   Thumb Code    48  mot.o(.text.vTask_Motore)
    vTask_SensUltrasuoni                     0x08002035   Thumb Code    10  ultrasuoni.o(.text.vTask_SensUltrasuoni)
    xEventGroupCreate                        0x08002041   Thumb Code    28  event_groups.o(.text.xEventGroupCreate)
    xEventGroupSetBits                       0x0800205d   Thumb Code   114  event_groups.o(.text.xEventGroupSetBits)
    xEventGroupWaitBits                      0x080020d1   Thumb Code   176  event_groups.o(.text.xEventGroupWaitBits)
    xPortStartScheduler                      0x08002181   Thumb Code    74  port.o(.text.xPortStartScheduler)
    xPortSysTickHandler                      0x080021cd   Thumb Code    46  port.o(.text.xPortSysTickHandler)
    xQueueCreateMutex                        0x080021fd   Thumb Code    22  queue.o(.text.xQueueCreateMutex)
    xQueueCreateMutexStatic                  0x08002215   Thumb Code    34  queue.o(.text.xQueueCreateMutexStatic)
    xQueueGenericCreate                      0x08002239   Thumb Code    82  queue.o(.text.xQueueGenericCreate)
    xQueueGenericCreateStatic                0x0800228d   Thumb Code    58  queue.o(.text.xQueueGenericCreateStatic)
    xQueueGenericReset                       0x080022c9   Thumb Code   128  queue.o(.text.xQueueGenericReset)
    xQueueGenericSend                        0x08002349   Thumb Code   310  queue.o(.text.xQueueGenericSend)
    xQueueReceive                            0x08002485   Thumb Code   300  queue.o(.text.xQueueReceive)
    xQueueSemaphoreTake                      0x080025b9   Thumb Code   354  queue.o(.text.xQueueSemaphoreTake)
    xTaskCheckForTimeOut                     0x08002721   Thumb Code    96  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x08002781   Thumb Code   102  tasks.o(.text.xTaskCreate)
    xTaskCreateStatic                        0x080027e9   Thumb Code    62  tasks.o(.text.xTaskCreateStatic)
    xTaskGetSchedulerState                   0x08002829   Thumb Code    38  tasks.o(.text.xTaskGetSchedulerState)
    xTaskGetTickCount                        0x08002851   Thumb Code    12  tasks.o(.text.xTaskGetTickCount)
    xTaskIncrementTick                       0x0800285d   Thumb Code   398  tasks.o(.text.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x080029f1   Thumb Code   112  tasks.o(.text.xTaskPriorityDisinherit)
    xTaskPriorityInherit                     0x08002a61   Thumb Code   166  tasks.o(.text.xTaskPriorityInherit)
    xTaskRemoveFromEventList                 0x08002b09   Thumb Code   216  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x08002be1   Thumb Code   340  tasks.o(.text.xTaskResumeAll)
    xTimerCreateTimerTask                    0x08002d3d   Thumb Code    96  timers.o(.text.xTimerCreateTimerTask)
    _fp_init                                 0x08002da5   Thumb Code    26  fpinit.o(x$fpl$fpinit)
    __fplib_config_fpu_vfp                   0x08002dbd   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x08002dbd   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    AHBPrescTable                            0x08002dbe   Data          16  system_stm32l4xx.o(.rodata.AHBPrescTable)
    MSIRangeTable                            0x08002dd0   Data          48  system_stm32l4xx.o(.rodata.MSIRangeTable)
    uxTopUsedPriority                        0x08002e00   Data           4  tasks.o(.rodata.uxTopUsedPriority)
    Region$$Table$$Base                      0x08002e04   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08002e24   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_stm32l4xx.o(.data.SystemCoreClock)
    __libspace_start                         0x20000008   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x20000068   Data           0  libspace.o(.bss)
    pxCurrentTCB                             0x200002b0   Data           4  tasks.o(.bss.pxCurrentTCB)
    xEventGroupRullo                         0x20002b88   Data           4  main.o(.bss.xEventGroupRullo)



==============================================================================

Memory Map of the image

  Image Entry point : 0x08000231

  Load Region LR_1 (Base: 0x08000000, Size: 0x00002e2c, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00002e24, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x00000188   Data   RO          498    RESET               startup_stm32l476xx.o
    0x08000188   0x08000188   0x00000008   Code   RO         1023  * !!!main             c_w.l(__main.o)
    0x08000190   0x08000190   0x00000034   Code   RO         1186    !!!scatter          c_w.l(__scatter.o)
    0x080001c4   0x080001c4   0x0000001a   Code   RO         1188    !!handler_copy      c_w.l(__scatter_copy.o)
    0x080001de   0x080001de   0x00000002   PAD
    0x080001e0   0x080001e0   0x0000001c   Code   RO         1190    !!handler_zi        c_w.l(__scatter_zi.o)
    0x080001fc   0x080001fc   0x00000002   Code   RO         1050    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x080001fe   0x080001fe   0x00000004   Code   RO         1056    .ARM.Collect$$libinit$$00000001  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000000   Code   RO         1059    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000000   Code   RO         1062    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000000   Code   RO         1064    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000000   Code   RO         1066    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000000   Code   RO         1069    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000000   Code   RO         1071    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000000   Code   RO         1073    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000000   Code   RO         1075    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000000   Code   RO         1077    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000000   Code   RO         1079    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000000   Code   RO         1081    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000000   Code   RO         1083    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000000   Code   RO         1085    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000000   Code   RO         1087    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000000   Code   RO         1089    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000000   Code   RO         1093    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000000   Code   RO         1095    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000000   Code   RO         1097    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000000   Code   RO         1099    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x08000202   0x08000202   0x00000002   Code   RO         1100    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x08000204   0x08000204   0x00000002   Code   RO         1122    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x08000206   0x08000206   0x00000000   Code   RO         1137    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x08000206   0x08000206   0x00000000   Code   RO         1139    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x08000206   0x08000206   0x00000000   Code   RO         1142    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x08000206   0x08000206   0x00000000   Code   RO         1145    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x08000206   0x08000206   0x00000000   Code   RO         1147    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x08000206   0x08000206   0x00000000   Code   RO         1150    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x08000206   0x08000206   0x00000002   Code   RO         1151    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x08000208   0x08000208   0x00000000   Code   RO         1025    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x08000208   0x08000208   0x00000000   Code   RO         1029    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x08000208   0x08000208   0x00000006   Code   RO         1041    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x0800020e   0x0800020e   0x00000008   Code   RO         1030    .ARM.Collect$$rtentry$$00000008  c_w.l(__rtentry2.o)
    0x08000216   0x08000216   0x00000004   Code   RO         1032    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x0800021a   0x0800021a   0x00000000   Code   RO         1034    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x0800021a   0x0800021a   0x00000008   Code   RO         1035    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x08000222   0x08000222   0x00000002   Code   RO         1054    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x08000224   0x08000224   0x00000000   Code   RO         1102    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x08000224   0x08000224   0x00000004   Code   RO         1103    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x08000228   0x08000228   0x00000006   Code   RO         1104    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0800022e   0x0800022e   0x00000002   PAD
    0x08000230   0x08000230   0x00000040   Code   RO          499  * .text               startup_stm32l476xx.o
    0x08000270   0x08000270   0x0000008a   Code   RO         1013    .text               c_w.l(rt_memcpy_v6.o)
    0x080002fa   0x080002fa   0x00000010   Code   RO         1015    .text               c_w.l(aeabi_memset4.o)
    0x0800030a   0x0800030a   0x0000004e   Code   RO         1019    .text               c_w.l(rt_memclr_w.o)
    0x08000358   0x08000358   0x00000006   Code   RO         1021    .text               c_w.l(heapauxi.o)
    0x0800035e   0x0800035e   0x00000064   Code   RO         1026    .text               c_w.l(rt_memcpy_w.o)
    0x080003c2   0x080003c2   0x0000004a   Code   RO         1043    .text               c_w.l(sys_stackheap_outer.o)
    0x0800040c   0x0800040c   0x00000012   Code   RO         1045    .text               c_w.l(exit.o)
    0x0800041e   0x0800041e   0x00000002   PAD
    0x08000420   0x08000420   0x00000008   Code   RO         1051    .text               c_w.l(libspace.o)
    0x08000428   0x08000428   0x0000000c   Code   RO         1112    .text               c_w.l(sys_exit.o)
    0x08000434   0x08000434   0x00000002   Code   RO         1127    .text               c_w.l(use_no_semi.o)
    0x08000436   0x08000436   0x00000000   Code   RO         1129    .text               c_w.l(indicate_semi.o)
    0x08000436   0x08000436   0x00000002   PAD
    0x08000438   0x08000438   0x00000048   Code   RO          253    .text.BuzzerInit    buzzer.o
    0x08000480   0x08000480   0x0000000c   Code   RO           97    .text.LedInit       led.o
    0x0800048c   0x0800048c   0x0000002a   Code   RO           99    .text.LedRossoInit  led.o
    0x080004b6   0x080004b6   0x00000002   PAD
    0x080004b8   0x080004b8   0x00000012   Code   RO          105    .text.LedRossoOff   led.o
    0x080004ca   0x080004ca   0x00000002   PAD
    0x080004cc   0x080004cc   0x00000012   Code   RO          103    .text.LedRossoOn    led.o
    0x080004de   0x080004de   0x00000002   PAD
    0x080004e0   0x080004e0   0x0000002a   Code   RO          101    .text.LedVerdeInit  led.o
    0x0800050a   0x0800050a   0x00000002   PAD
    0x0800050c   0x0800050c   0x00000012   Code   RO          111    .text.LedVerdeOff   led.o
    0x0800051e   0x0800051e   0x00000002   PAD
    0x08000520   0x08000520   0x00000012   Code   RO          109    .text.LedVerdeOn    led.o
    0x08000532   0x08000532   0x0000000e   PAD
    0x08000540   0x08000540   0x0000007a   Code   RO          999    .text.PendSV_Handler  port.o
    0x080005ba   0x080005ba   0x00000006   PAD
    0x080005c0   0x080005c0   0x0000002e   Code   RO          983    .text.SVC_Handler   port.o
    0x080005ee   0x080005ee   0x00000002   PAD
    0x080005f0   0x080005f0   0x0000003c   Code   RO           14    .text.SwCenterInit  puls.o
    0x0800062c   0x0800062c   0x0000003c   Code   RO           22    .text.SwDownInit    puls.o
    0x08000668   0x08000668   0x00000018   Code   RO           12    .text.SwInit        puls.o
    0x08000680   0x08000680   0x0000003c   Code   RO           16    .text.SwLeftInit    puls.o
    0x080006bc   0x080006bc   0x0000003c   Code   RO           18    .text.SwRightInit   puls.o
    0x080006f8   0x080006f8   0x0000003c   Code   RO           20    .text.SwUpInit      puls.o
    0x08000734   0x08000734   0x0000001a   Code   RO          290    .text.SysTick_Handler  cmsis_os2.o
    0x0800074e   0x0800074e   0x00000002   PAD
    0x08000750   0x08000750   0x000000be   Code   RO          508    .text.SystemCoreClockUpdate  system_stm32l4xx.o
    0x0800080e   0x0800080e   0x00000002   PAD
    0x08000810   0x08000810   0x00000044   Code   RO          506    .text.SystemInit    system_stm32l4xx.o
    0x08000854   0x08000854   0x00000078   Code   RO          141    .text.TIM1_CH2_Init  mot.o
    0x080008cc   0x080008cc   0x00000098   Code   RO          201    .text.TIM2_CH1_InCapt_SM  ultrasuoni.o
    0x08000964   0x08000964   0x00000026   Code   RO          207    .text.TIM2_IRQHandler  ultrasuoni.o
    0x0800098a   0x0800098a   0x00000002   PAD
    0x0800098c   0x0800098c   0x00000072   Code   RO          199    .text.TIM4_CH1_Init  ultrasuoni.o
    0x080009fe   0x080009fe   0x00000002   PAD
    0x08000a00   0x08000a00   0x00000010   Code   RO          205    .text.__NVIC_EnableIRQ  ultrasuoni.o
    0x08000a10   0x08000a10   0x0000000e   Code   RO          203    .text.__NVIC_SetPriority  ultrasuoni.o
    0x08000a1e   0x08000a1e   0x00000002   PAD
    0x08000a20   0x08000a20   0x0000001a   Code   RO          272    .text._mutex_acquire  clib_arm.o
    0x08000a3a   0x08000a3a   0x00000002   PAD
    0x08000a3c   0x08000a3c   0x00000030   Code   RO          276    .text._mutex_free   clib_arm.o
    0x08000a6c   0x08000a6c   0x00000052   Code   RO          270    .text._mutex_initialize  clib_arm.o
    0x08000abe   0x08000abe   0x00000002   PAD
    0x08000ac0   0x08000ac0   0x0000001c   Code   RO          274    .text._mutex_release  clib_arm.o
    0x08000adc   0x08000adc   0x00000002   Code   RO          264    .text._platform_post_stackheap_init  clib_arm.o
    0x08000ade   0x08000ade   0x00000002   PAD
    0x08000ae0   0x08000ae0   0x00000020   Code   RO          179    .text.digitalRead   arduino.o
    0x08000b00   0x08000b00   0x00000030   Code   RO          177    .text.digitalWrite  arduino.o
    0x08000b30   0x08000b30   0x0000003c   Code   RO          193    .text.echoInit      ultrasuoni.o
    0x08000b6c   0x08000b6c   0x00000044   Code   RO          217    .text.irInit        infrarossi.o
    0x08000bb0   0x08000bb0   0x0000000a   Code   RO          221    .text.irRead        infrarossi.o
    0x08000bba   0x08000bba   0x00000002   PAD
    0x08000bbc   0x08000bbc   0x0000003a   Code   RO            2    .text.main          main.o
    0x08000bf6   0x08000bf6   0x00000002   PAD
    0x08000bf8   0x08000bf8   0x000000d0   Code   RO          139    .text.motInit       mot.o
    0x08000cc8   0x08000cc8   0x0000000e   Code   RO          151    .text.motStart      mot.o
    0x08000cd6   0x08000cd6   0x00000002   PAD
    0x08000cd8   0x08000cd8   0x0000000e   Code   RO          149    .text.motStop       mot.o
    0x08000ce6   0x08000ce6   0x00000002   PAD
    0x08000ce8   0x08000ce8   0x00000010   Code   RO          268    .text.os_kernel_is_active  clib_arm.o
    0x08000cf8   0x08000cf8   0x00000054   Code   RO          173    .text.pinMode       arduino.o
    0x08000d4c   0x08000d4c   0x000000f2   Code   RO          163    .text.pllInit       sysclock.o
    0x08000e3e   0x08000e3e   0x00000002   PAD
    0x08000e40   0x08000e40   0x0000009c   Code   RO          770    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x08000edc   0x08000edc   0x000000cc   Code   RO          756    .text.prvAddNewTaskToReadyList  tasks.o
    0x08000fa8   0x08000fa8   0x0000006a   Code   RO          908    .text.prvCheckForValidListAndQueue  timers.o
    0x08001012   0x08001012   0x00000002   PAD
    0x08001014   0x08001014   0x0000004e   Code   RO          874    .text.prvCheckTasksWaitingTermination  tasks.o
    0x08001062   0x08001062   0x00000002   PAD
    0x08001064   0x08001064   0x00000026   Code   RO          654    .text.prvCopyDataFromQueue  queue.o
    0x0800108a   0x0800108a   0x00000002   PAD
    0x0800108c   0x0800108c   0x0000007a   Code   RO          642    .text.prvCopyDataToQueue  queue.o
    0x08001106   0x08001106   0x00000002   PAD
    0x08001108   0x08001108   0x00000020   Code   RO          764    .text.prvDeleteTCB  tasks.o
    0x08001128   0x08001128   0x00000012   Code   RO          658    .text.prvGetDisinheritPriorityAfterTimeout  queue.o
    0x0800113a   0x0800113a   0x00000002   PAD
    0x0800113c   0x0800113c   0x00000020   Code   RO          946    .text.prvGetNextExpireTime  timers.o
    0x0800115c   0x0800115c   0x00000076   Code   RO          582    .text.prvHeapInit   heap_4.o
    0x080011d2   0x080011d2   0x00000002   PAD
    0x080011d4   0x080011d4   0x0000002a   Code   RO          796    .text.prvIdleTask   tasks.o
    0x080011fe   0x080011fe   0x00000002   PAD
    0x08001200   0x08001200   0x00000020   Code   RO          622    .text.prvInitialiseMutex  queue.o
    0x08001220   0x08001220   0x00000020   Code   RO          616    .text.prvInitialiseNewQueue  queue.o
    0x08001240   0x08001240   0x00000098   Code   RO          754    .text.prvInitialiseNewTask  tasks.o
    0x080012d8   0x080012d8   0x00000070   Code   RO          872    .text.prvInitialiseTaskLists  tasks.o
    0x08001348   0x08001348   0x0000005a   Code   RO          584    .text.prvInsertBlockIntoFreeList  heap_4.o
    0x080013a2   0x080013a2   0x00000002   PAD
    0x080013a4   0x080013a4   0x00000040   Code   RO          960    .text.prvInsertTimerInActiveList  timers.o
    0x080013e4   0x080013e4   0x00000018   Code   RO          656    .text.prvIsQueueEmpty  queue.o
    0x080013fc   0x080013fc   0x0000001c   Code   RO          644    .text.prvIsQueueFull  queue.o
    0x08001418   0x08001418   0x00000028   Code   RO          991    .text.prvPortStartFirstTask  port.o
    0x08001440   0x08001440   0x0000003e   Code   RO          954    .text.prvProcessExpiredTimer  timers.o
    0x0800147e   0x0800147e   0x00000002   PAD
    0x08001480   0x08001480   0x000000fa   Code   RO          950    .text.prvProcessReceivedCommands  timers.o
    0x0800157a   0x0800157a   0x00000002   PAD
    0x0800157c   0x0800157c   0x00000080   Code   RO          948    .text.prvProcessTimerOrBlockTask  timers.o
    0x080015fc   0x080015fc   0x0000003a   Code   RO          958    .text.prvReloadTimer  timers.o
    0x08001636   0x08001636   0x00000002   PAD
    0x08001638   0x08001638   0x00000026   Code   RO          762    .text.prvResetNextTaskUnblockTime  tasks.o
    0x0800165e   0x0800165e   0x00000002   PAD
    0x08001660   0x08001660   0x0000002a   Code   RO          952    .text.prvSampleTimeNow  timers.o
    0x0800168a   0x0800168a   0x00000002   PAD
    0x0800168c   0x0800168c   0x00000034   Code   RO          956    .text.prvSwitchTimerLists  timers.o
    0x080016c0   0x080016c0   0x00000022   Code   RO          981    .text.prvTaskExitError  port.o
    0x080016e2   0x080016e2   0x00000002   PAD
    0x080016e4   0x080016e4   0x00000018   Code   RO          534    .text.prvTestWaitCondition  event_groups.o
    0x080016fc   0x080016fc   0x00000016   Code   RO          910    .text.prvTimerTask  timers.o
    0x08001712   0x08001712   0x00000002   PAD
    0x08001714   0x08001714   0x00000072   Code   RO          646    .text.prvUnlockQueue  queue.o
    0x08001786   0x08001786   0x00000002   PAD
    0x08001788   0x08001788   0x00000114   Code   RO          580    .text.pvPortMalloc  heap_4.o
    0x0800189c   0x0800189c   0x00000018   Code   RO          856    .text.pvTaskIncrementMutexHeldCount  tasks.o
    0x080018b4   0x080018b4   0x00000028   Code   RO          979    .text.pxPortInitialiseStack  port.o
    0x080018dc   0x080018dc   0x0000003a   Code   RO          191    .text.trgInit       ultrasuoni.o
    0x08001916   0x08001916   0x00000002   PAD
    0x08001918   0x08001918   0x0000004c   Code   RO          195    .text.ultrsInit     ultrasuoni.o
    0x08001964   0x08001964   0x00000024   Code   RO          570    .text.uxListRemove  list.o
    0x08001988   0x08001988   0x0000001a   Code   RO          854    .text.uxTaskResetEventItemValue  tasks.o
    0x080019a2   0x080019a2   0x00000002   PAD
    0x080019a4   0x080019a4   0x0000001a   Code   RO          448    .text.vApplicationGetIdleTaskMemory  cmsis_os2.o
    0x080019be   0x080019be   0x00000002   PAD
    0x080019c0   0x080019c0   0x0000001a   Code   RO          450    .text.vApplicationGetTimerTaskMemory  cmsis_os2.o
    0x080019da   0x080019da   0x00000002   PAD
    0x080019dc   0x080019dc   0x00000002   Code   RO          446    .text.vApplicationStackOverflowHook  cmsis_os2.o
    0x080019de   0x080019de   0x00000002   PAD
    0x080019e0   0x080019e0   0x00000016   Code   RO          562    .text.vListInitialise  list.o
    0x080019f6   0x080019f6   0x00000002   PAD
    0x080019f8   0x080019f8   0x00000006   Code   RO          564    .text.vListInitialiseItem  list.o
    0x080019fe   0x080019fe   0x00000002   PAD
    0x08001a00   0x08001a00   0x0000003a   Code   RO          568    .text.vListInsert   list.o
    0x08001a3a   0x08001a3a   0x00000002   PAD
    0x08001a3c   0x08001a3c   0x00000014   Code   RO          989    .text.vPortEnableVFP  port.o
    0x08001a50   0x08001a50   0x00000020   Code   RO          995    .text.vPortEnterCritical  port.o
    0x08001a70   0x08001a70   0x0000001a   Code   RO          997    .text.vPortExitCritical  port.o
    0x08001a8a   0x08001a8a   0x00000002   PAD
    0x08001a8c   0x08001a8c   0x00000064   Code   RO          586    .text.vPortFree     heap_4.o
    0x08001af0   0x08001af0   0x00000034   Code   RO          987    .text.vPortSetupTimerInterrupt  port.o
    0x08001b24   0x08001b24   0x00000010   Code   RO          672    .text.vQueueDelete  queue.o
    0x08001b34   0x08001b34   0x00000044   Code   RO          684    .text.vQueueWaitForMessageRestricted  queue.o
    0x08001b78   0x08001b78   0x00000036   Code   RO          255    .text.vTaskBuzzerTest  buzzer.o
    0x08001bae   0x08001bae   0x00000002   PAD
    0x08001bb0   0x08001bb0   0x00000034   Code   RO          774    .text.vTaskDelay    tasks.o
    0x08001be4   0x08001be4   0x0000001a   Code   RO          828    .text.vTaskInternalSetTimeOutState  tasks.o
    0x08001bfe   0x08001bfe   0x00000002   PAD
    0x08001c00   0x08001c00   0x0000000e   Code   RO          832    .text.vTaskMissedYield  tasks.o
    0x08001c0e   0x08001c0e   0x00000002   PAD
    0x08001c10   0x08001c10   0x00000028   Code   RO          145    .text.vTaskMotPA0   mot.o
    0x08001c38   0x08001c38   0x00000028   Code   RO          147    .text.vTaskMotPA2   mot.o
    0x08001c60   0x08001c60   0x0000001e   Code   RO          816    .text.vTaskPlaceOnEventList  tasks.o
    0x08001c7e   0x08001c7e   0x00000002   PAD
    0x08001c80   0x08001c80   0x0000005a   Code   RO          820    .text.vTaskPlaceOnEventListRestricted  tasks.o
    0x08001cda   0x08001cda   0x00000002   PAD
    0x08001cdc   0x08001cdc   0x00000054   Code   RO          818    .text.vTaskPlaceOnUnorderedEventList  tasks.o
    0x08001d30   0x08001d30   0x00000080   Code   RO          852    .text.vTaskPriorityDisinheritAfterTimeout  tasks.o
    0x08001db0   0x08001db0   0x000000b4   Code   RO          824    .text.vTaskRemoveFromUnorderedEventList  tasks.o
    0x08001e64   0x08001e64   0x00000056   Code   RO          219    .text.vTaskRilevaColore  infrarossi.o
    0x08001eba   0x08001eba   0x00000002   PAD
    0x08001ebc   0x08001ebc   0x00000094   Code   RO          794    .text.vTaskStartScheduler  tasks.o
    0x08001f50   0x08001f50   0x00000010   Code   RO          768    .text.vTaskSuspendAll  tasks.o
    0x08001f60   0x08001f60   0x000000a4   Code   RO          786    .text.vTaskSwitchContext  tasks.o
    0x08002004   0x08002004   0x00000030   Code   RO          143    .text.vTask_Motore  mot.o
    0x08002034   0x08002034   0x0000000a   Code   RO          197    .text.vTask_SensUltrasuoni  ultrasuoni.o
    0x0800203e   0x0800203e   0x00000002   PAD
    0x08002040   0x08002040   0x0000001c   Code   RO          526    .text.xEventGroupCreate  event_groups.o
    0x0800205c   0x0800205c   0x00000072   Code   RO          530    .text.xEventGroupSetBits  event_groups.o
    0x080020ce   0x080020ce   0x00000002   PAD
    0x080020d0   0x080020d0   0x000000b0   Code   RO          532    .text.xEventGroupWaitBits  event_groups.o
    0x08002180   0x08002180   0x0000004a   Code   RO          985    .text.xPortStartScheduler  port.o
    0x080021ca   0x080021ca   0x00000002   PAD
    0x080021cc   0x080021cc   0x0000002e   Code   RO         1001    .text.xPortSysTickHandler  port.o
    0x080021fa   0x080021fa   0x00000002   PAD
    0x080021fc   0x080021fc   0x00000016   Code   RO          620    .text.xQueueCreateMutex  queue.o
    0x08002212   0x08002212   0x00000002   PAD
    0x08002214   0x08002214   0x00000022   Code   RO          624    .text.xQueueCreateMutexStatic  queue.o
    0x08002236   0x08002236   0x00000002   PAD
    0x08002238   0x08002238   0x00000052   Code   RO          618    .text.xQueueGenericCreate  queue.o
    0x0800228a   0x0800228a   0x00000002   PAD
    0x0800228c   0x0800228c   0x0000003a   Code   RO          614    .text.xQueueGenericCreateStatic  queue.o
    0x080022c6   0x080022c6   0x00000002   PAD
    0x080022c8   0x080022c8   0x00000080   Code   RO          612    .text.xQueueGenericReset  queue.o
    0x08002348   0x08002348   0x0000013c   Code   RO          632    .text.xQueueGenericSend  queue.o
    0x08002484   0x08002484   0x00000132   Code   RO          652    .text.xQueueReceive  queue.o
    0x080025b6   0x080025b6   0x00000002   PAD
    0x080025b8   0x080025b8   0x00000168   Code   RO          636    .text.xQueueSemaphoreTake  queue.o
    0x08002720   0x08002720   0x00000060   Code   RO          830    .text.xTaskCheckForTimeOut  tasks.o
    0x08002780   0x08002780   0x00000066   Code   RO          758    .text.xTaskCreate   tasks.o
    0x080027e6   0x080027e6   0x00000002   PAD
    0x080027e8   0x080027e8   0x0000003e   Code   RO          752    .text.xTaskCreateStatic  tasks.o
    0x08002826   0x08002826   0x00000002   PAD
    0x08002828   0x08002828   0x00000026   Code   RO          846    .text.xTaskGetSchedulerState  tasks.o
    0x0800284e   0x0800284e   0x00000002   PAD
    0x08002850   0x08002850   0x0000000c   Code   RO          802    .text.xTaskGetTickCount  tasks.o
    0x0800285c   0x0800285c   0x00000194   Code   RO          800    .text.xTaskIncrementTick  tasks.o
    0x080029f0   0x080029f0   0x00000070   Code   RO          850    .text.xTaskPriorityDisinherit  tasks.o
    0x08002a60   0x08002a60   0x000000a6   Code   RO          848    .text.xTaskPriorityInherit  tasks.o
    0x08002b06   0x08002b06   0x00000002   PAD
    0x08002b08   0x08002b08   0x000000d8   Code   RO          822    .text.xTaskRemoveFromEventList  tasks.o
    0x08002be0   0x08002be0   0x0000015a   Code   RO          772    .text.xTaskResumeAll  tasks.o
    0x08002d3a   0x08002d3a   0x00000002   PAD
    0x08002d3c   0x08002d3c   0x00000068   Code   RO          906    .text.xTimerCreateTimerTask  timers.o
    0x08002da4   0x08002da4   0x0000001a   Code   RO         1110    x$fpl$fpinit        fz_wm.l(fpinit.o)
    0x08002dbe   0x08002dbe   0x00000010   Data   RO          511    .rodata.AHBPrescTable  system_stm32l4xx.o
    0x08002dce   0x08002dce   0x00000002   PAD
    0x08002dd0   0x08002dd0   0x00000030   Data   RO          513    .rodata.MSIRangeTable  system_stm32l4xx.o
    0x08002e00   0x08002e00   0x00000004   Data   RO          877    .rodata.uxTopUsedPriority  tasks.o
    0x08002e04   0x08002e04   0x00000020   Data   RO         1185    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x08002e24, Size: 0x00000008, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x08002e24   0x00000004   Data   RW          510    .data.SystemCoreClock  system_stm32l4xx.o
    0x20000004   0x08002e28   0x00000004   Data   RW         1003    .data.uxCriticalNesting  port.o


    Execution Region ER_ZI (Exec base: 0x20000008, Load base: 0x08002e2c, Size: 0x00003200, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000008        -       0x00000060   Zero   RW         1052    .bss                c_w.l(libspace.o)
    0x20000068        -       0x00000190   Zero   RW          281    .bss.clib_mutex_cb  clib_arm.o
    0x200001f8        -       0x00000014   Zero   RW          280    .bss.clib_mutex_id  clib_arm.o
    0x2000020c        -       0x00000050   Zero   RW          970    .bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage  timers.o
    0x2000025c        -       0x00000050   Zero   RW          969    .bss.prvCheckForValidListAndQueue.xStaticTimerQueue  timers.o
    0x200002ac        -       0x00000004   Zero   RW          966    .bss.prvSampleTimeNow.xLastTime  timers.o
    0x200002b0        -       0x00000004   Zero   RW          876    .bss.pxCurrentTCB   tasks.o
    0x200002b4        -       0x00000004   Zero   RW          964    .bss.pxCurrentTimerList  timers.o
    0x200002b8        -       0x00000004   Zero   RW          884    .bss.pxDelayedTaskList  tasks.o
    0x200002bc        -       0x00000004   Zero   RW          596    .bss.pxEnd          heap_4.o
    0x200002c0        -       0x00000004   Zero   RW          885    .bss.pxOverflowDelayedTaskList  tasks.o
    0x200002c4        -       0x00000004   Zero   RW          965    .bss.pxOverflowTimerList  timers.o
    0x200002c8        -       0x00000460   Zero   RW          887    .bss.pxReadyTasksLists  tasks.o
    0x20000728        -       0x00002000   Zero   RW          603    .bss.ucHeap         heap_4.o
    0x20002728        -       0x00000004   Zero   RW          881    .bss.uxCurrentNumberOfTasks  tasks.o
    0x2000272c        -       0x00000004   Zero   RW          880    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x20002730        -       0x00000004   Zero   RW          889    .bss.uxSchedulerSuspended  tasks.o
    0x20002734        -       0x00000004   Zero   RW          878    .bss.uxTaskNumber   tasks.o
    0x20002738        -       0x00000004   Zero   RW          888    .bss.uxTopReadyPriority  tasks.o
    0x2000273c        -       0x00000200   Zero   RW          457    .bss.vApplicationGetIdleTaskMemory.Idle_Stack  cmsis_os2.o
    0x2000293c        -       0x0000005c   Zero   RW          456    .bss.vApplicationGetIdleTaskMemory.Idle_TCB  cmsis_os2.o
    0x20002998        -       0x00000140   Zero   RW          459    .bss.vApplicationGetTimerTaskMemory.Timer_Stack  cmsis_os2.o
    0x20002ad8        -       0x0000005c   Zero   RW          458    .bss.vApplicationGetTimerTaskMemory.Timer_TCB  cmsis_os2.o
    0x20002b34        -       0x00000014   Zero   RW          967    .bss.xActiveTimerList1  timers.o
    0x20002b48        -       0x00000014   Zero   RW          968    .bss.xActiveTimerList2  timers.o
    0x20002b5c        -       0x00000001   Zero   RW          597    .bss.xBlockAllocatedBit  heap_4.o
    0x20002b5d   0x08002e2c   0x00000003   PAD
    0x20002b60        -       0x00000014   Zero   RW          896    .bss.xDelayedTaskList1  tasks.o
    0x20002b74        -       0x00000014   Zero   RW          897    .bss.xDelayedTaskList2  tasks.o
    0x20002b88        -       0x00000004   Zero   RW            4    .bss.xEventGroupRullo  main.o
    0x20002b8c        -       0x00000004   Zero   RW          598    .bss.xFreeBytesRemaining  heap_4.o
    0x20002b90        -       0x00000004   Zero   RW          892    .bss.xIdleTaskHandle  tasks.o
    0x20002b94        -       0x00000004   Zero   RW          600    .bss.xMinimumEverFreeBytesRemaining  heap_4.o
    0x20002b98        -       0x00000004   Zero   RW          893    .bss.xNextTaskUnblockTime  tasks.o
    0x20002b9c        -       0x00000004   Zero   RW          895    .bss.xNumOfOverflows  tasks.o
    0x20002ba0        -       0x00000004   Zero   RW          601    .bss.xNumberOfSuccessfulAllocations  heap_4.o
    0x20002ba4        -       0x00000004   Zero   RW          602    .bss.xNumberOfSuccessfulFrees  heap_4.o
    0x20002ba8        -       0x00000004   Zero   RW          894    .bss.xPendedTicks   tasks.o
    0x20002bac        -       0x00000014   Zero   RW          891    .bss.xPendingReadyList  tasks.o
    0x20002bc0        -       0x00000004   Zero   RW          882    .bss.xSchedulerRunning  tasks.o
    0x20002bc4        -       0x00000008   Zero   RW          599    .bss.xStart         heap_4.o
    0x20002bcc        -       0x00000014   Zero   RW          886    .bss.xSuspendedTaskList  tasks.o
    0x20002be0        -       0x00000014   Zero   RW          879    .bss.xTasksWaitingTermination  tasks.o
    0x20002bf4        -       0x00000004   Zero   RW          883    .bss.xTickCount     tasks.o
    0x20002bf8        -       0x00000004   Zero   RW          962    .bss.xTimerQueue    timers.o
    0x20002bfc        -       0x00000004   Zero   RW          963    .bss.xTimerTaskHandle  timers.o
    0x20002c00        -       0x00000004   Zero   RW          890    .bss.xYieldPending  tasks.o
    0x20002c04   0x08002e2c   0x00000004   PAD
    0x20002c08        -       0x00000200   Zero   RW          497    HEAP                startup_stm32l476xx.o
    0x20002e08        -       0x00000400   Zero   RW          496    STACK               startup_stm32l476xx.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       164          0          0          0          0       4906   arduino.o
       126         24          0          0          0       2433   buzzer.o
       202          0          0          0        420       3374   clib_arm.o
        80          0          0          0       1016      41133   cmsis_os2.o
       342          0          0          0          0       8211   event_groups.o
       584          0          0          0       8221       4481   heap_4.o
       164         24          0          0          0       2710   infrarossi.o
       168          0          0          0          0       5764   led.o
       122          0          0          0          0       2278   list.o
        58          0          0          0          4        617   main.o
       484         64          0          0          0       4905   mot.o
       532         16          0          4          0       2904   port.o
       324          0          0          0          0       5835   puls.o
      1798          0          0          0          0      18583   queue.o
        64         26        392          0       1536        908   startup_stm32l476xx.o
       242          0          0          0          0       2476   sysclock.o
       258          4         64          4          0       3084   system_stm32l4xx.o
      3350          8          4          0       1280      29731   tasks.o
       920         18          0          0        220      13205   timers.o
       538         28          0          0          0       6222   ultrasuoni.o

    ----------------------------------------------------------------------
     10668        212        494          8      12704     163760   Object Totals
         0          0         32          0          0          0   (incl. Generated)
       148          0          2          0          7          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        16          0          0          0          0         68   aeabi_memset4.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         6          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
        26          0          0          0          0        116   fpinit.o

    ----------------------------------------------------------------------
       650         16          0          0         96        996   Library Totals
         8          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       616         16          0          0         96        880   c_w.l
        26          0          0          0          0        116   fz_wm.l

    ----------------------------------------------------------------------
       650         16          0          0         96        996   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     11318        228        494          8      12800     164032   Grand Totals
     11318        228        494          8      12800     164032   ELF Image Totals
     11318        228        494          8          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                11812 (  11.54kB)
    Total RW  Size (RW Data + ZI Data)             12808 (  12.51kB)
    Total ROM Size (Code + RO Data + RW Data)      11820 (  11.54kB)

==============================================================================

